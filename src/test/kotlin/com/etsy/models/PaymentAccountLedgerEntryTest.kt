/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.etsy.models.PaymentAccountLedgerEntry
import com.etsy.models.PaymentAdjustment

class PaymentAccountLedgerEntryTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PaymentAccountLedgerEntry
        //val modelInstance = PaymentAccountLedgerEntry()

        // to test the property `entryId` - The ledger entry's numeric ID.
        should("test entryId") {
            // uncomment below to test the property
            //modelInstance.entryId shouldBe ("TODO")
        }

        // to test the property `ledgerId` - The ledger's numeric ID.
        should("test ledgerId") {
            // uncomment below to test the property
            //modelInstance.ledgerId shouldBe ("TODO")
        }

        // to test the property `sequenceNumber` - The sequence allows ledger entries to be sorted chronologically. The higher the sequence, the more recent the entry.
        should("test sequenceNumber") {
            // uncomment below to test the property
            //modelInstance.sequenceNumber shouldBe ("TODO")
        }

        // to test the property `amount` - The amount of money credited to the ledger.
        should("test amount") {
            // uncomment below to test the property
            //modelInstance.amount shouldBe ("TODO")
        }

        // to test the property `currency` - The currency of the entry on the ledger.
        should("test currency") {
            // uncomment below to test the property
            //modelInstance.currency shouldBe ("TODO")
        }

        // to test the property `description` - Details what kind of ledger entry this is: a payment, refund, reversal of a failed refund, disbursement, returned disbursement, recoupment, miscellaneous credit, miscellaneous debit, or bill payment.
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `balance` - The amount of money in the shop's ledger the moment after this entry was applied.
        should("test balance") {
            // uncomment below to test the property
            //modelInstance.balance shouldBe ("TODO")
        }

        // to test the property `createDate` - The date and time the ledger entry was created in Epoch seconds.
        should("test createDate") {
            // uncomment below to test the property
            //modelInstance.createDate shouldBe ("TODO")
        }

        // to test the property `createdTimestamp` - The date and time the ledger entry was created in Epoch seconds.
        should("test createdTimestamp") {
            // uncomment below to test the property
            //modelInstance.createdTimestamp shouldBe ("TODO")
        }

        // to test the property `ledgerType` - The original reference type for the ledger entry.
        should("test ledgerType") {
            // uncomment below to test the property
            //modelInstance.ledgerType shouldBe ("TODO")
        }

        // to test the property `referenceType` - The object type the ledger entry refers to.
        should("test referenceType") {
            // uncomment below to test the property
            //modelInstance.referenceType shouldBe ("TODO")
        }

        // to test the property `referenceId` - The object id the ledger entry refers to.
        should("test referenceId") {
            // uncomment below to test the property
            //modelInstance.referenceId shouldBe ("TODO")
        }

        // to test the property `paymentAdjustments` - List of refund objects on an Etsy Payments transaction. All monetary amounts are in USD pennies unless otherwise specified.
        should("test paymentAdjustments") {
            // uncomment below to test the property
            //modelInstance.paymentAdjustments shouldBe ("TODO")
        }

    }
}
