/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.models

import com.etsy.models.Money

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * A listing from a shop, which contains a product quantity, title, description, price, etc.
 *
 * @param listingId The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
 * @param userId The numeric ID for the [user](/documentation/reference#tag/User) posting the listing.
 * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
 * @param title The listing's title string. When creating or updating a listing, valid title strings contain only letters, numbers, punctuation marks, mathematical symbols, whitespace characters, ™, ©, and ®. (regex: /[^\\p{L}\\p{Nd}\\p{P}\\p{Sm}\\p{Zs}™©®]/u) You can only use the %, :, & and + characters once each.
 * @param description A description string of the product for sale in the listing.
 * @param state When _updating_ a listing, this value can be either `active` or `inactive`. Note: Setting a `draft` listing to `active` will also publish the listing on etsy.com and requires that the listing have an image set. Setting a `sold_out` listing to active will update the quantity to 1 and renew the listing on etsy.com.
 * @param creationTimestamp The listing's creation time, in epoch seconds.
 * @param createdTimestamp The listing's creation time, in epoch seconds.
 * @param endingTimestamp The listing's expiration time, in epoch seconds.
 * @param originalCreationTimestamp The listing's creation time, in epoch seconds.
 * @param lastModifiedTimestamp The time of the last update to the listing, in epoch seconds.
 * @param updatedTimestamp The time of the last update to the listing, in epoch seconds.
 * @param stateTimestamp The date and time of the last state change of this listing.
 * @param quantity The positive non-zero number of products available for purchase in the listing. Note: The listing quantity is the sum of available offering quantities. You can request the quantities for individual offerings from the ListingInventory resource using the [getListingInventory](/documentation/reference#operation/getListingInventory) endpoint.
 * @param shopSectionId The numeric ID of a section in a specific Etsy shop.
 * @param featuredRank The positive non-zero numeric position in the featured listings of the shop, with rank 1 listings appearing in the left-most position in featured listing on a shop's home page.
 * @param url The full URL to the listing's page on Etsy.
 * @param numFavorers The number of users who marked this Listing a favorite.
 * @param nonTaxable When true, applicable [shop](/documentation/reference#tag/Shop) tax rates do not apply to this listing at checkout.
 * @param isTaxable When true, applicable [shop](/documentation/reference#tag/Shop) tax rates apply to this listing at checkout.
 * @param isCustomizable When true, a buyer may contact the seller for a customized order. The default value is true when a shop accepts custom orders. Does not apply to shops that do not accept custom orders.
 * @param isPersonalizable When true, this listing is personalizable. The default value is null.
 * @param personalizationIsRequired When true, this listing requires personalization. The default value is null. Will only change if is_personalizable is 'true'.
 * @param personalizationCharCountMax This is an integer value representing the maximum length for the personalization message entered by the buyer. Will only change if is_personalizable is 'true'.
 * @param personalizationInstructions When true, this listing requires personalization. The default value is null. Will only change if is_personalizable is 'true'.
 * @param listingType An enumerated type string that indicates whether the listing is physical or a digital download.
 * @param tags A comma-separated list of tag strings for the listing. When creating or updating a listing, valid tag strings contain only letters, numbers, whitespace characters, -, ', ™, ©, and ®. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}\\-'™©®]/u) Default value is null.
 * @param materials A list of material strings for materials used in the product. Valid materials strings contain only letters, numbers, and whitespace characters. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}]/u) Default value is null.
 * @param shippingProfileId The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile) associated with the listing. Required when listing type is `physical`.
 * @param returnPolicyId The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
 * @param processingMin The minimum number of days required to process this listing. Default value is null.
 * @param processingMax The maximum number of days required to process this listing. Default value is null.
 * @param whoMade An enumerated string indicating who made the product. Helps buyers locate the listing under the Handmade heading. Requires 'is_supply' and 'when_made'.
 * @param whenMade An enumerated string for the era in which the maker made the product in this listing. Helps buyers locate the listing under the Vintage heading. Requires 'is_supply' and 'who_made'.
 * @param isSupply When true, tags the listing as a supply product, else indicates that it's a finished product. Helps buyers locate the listing under the Supplies heading. Requires 'who_made' and 'when_made'.
 * @param itemWeight The numeric weight of the product measured in units set in 'item_weight_unit'. Default value is null. If set, the value must be greater than 0.
 * @param itemWeightUnit A string defining the units used to measure the weight of the product. Default value is null.
 * @param itemLength The numeric length of the product measured in units set in 'item_dimensions_unit'. Default value is null. If set, the value must be greater than 0.
 * @param itemWidth The numeric width of the product measured in units set in 'item_dimensions_unit'. Default value is null. If set, the value must be greater than 0.
 * @param itemHeight The numeric length of the product measured in units set in 'item_dimensions_unit'. Default value is null. If set, the value must be greater than 0.
 * @param itemDimensionsUnit A string defining the units used to measure the dimensions of the product. Default value is null.
 * @param isPrivate When true, this is a private listing intended for a specific buyer and hidden from shop view.
 * @param style An array of style strings for this listing, each of which is free-form text string such as \"Formal\", or \"Steampunk\". When creating or updating a listing, the listing may have up to two styles. Valid style strings contain only letters, numbers, and whitespace characters. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}]/u) Default value is null.
 * @param fileData A string describing the files attached to a digital listing.
 * @param hasVariations When true, the listing has variations.
 * @param shouldAutoRenew When true, renews a listing for four months upon expiration.
 * @param language The IETF language tag for the default language of the listing. Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`, `ru`.
 * @param price The positive non-zero price of the product. (Sold product listings are private) Note: The price is the minimum possible price. The [`getListingInventory`](/documentation/reference/#operation/getListingInventory) method requests exact prices for available offerings.
 * @param taxonomyId The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy) and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more information.
 * @param readinessStateId The numeric ID of the [processing profile](/documentation/reference#operation/getShopReadinessStateDefinition) associated with the listing. Required when listing type is `physical`.
 */
@Serializable

data class ShopListing (

    /* The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction. */
    @SerialName(value = "listing_id") val listingId: kotlin.Long? = null,

    /* The numeric ID for the [user](/documentation/reference#tag/User) posting the listing. */
    @SerialName(value = "user_id") val userId: kotlin.Long? = null,

    /* The unique positive non-zero numeric ID for an Etsy Shop. */
    @SerialName(value = "shop_id") val shopId: kotlin.Long? = null,

    /* The listing's title string. When creating or updating a listing, valid title strings contain only letters, numbers, punctuation marks, mathematical symbols, whitespace characters, ™, ©, and ®. (regex: /[^\\p{L}\\p{Nd}\\p{P}\\p{Sm}\\p{Zs}™©®]/u) You can only use the %, :, & and + characters once each. */
    @SerialName(value = "title") val title: kotlin.String? = null,

    /* A description string of the product for sale in the listing. */
    @SerialName(value = "description") val description: kotlin.String? = null,

    /* When _updating_ a listing, this value can be either `active` or `inactive`. Note: Setting a `draft` listing to `active` will also publish the listing on etsy.com and requires that the listing have an image set. Setting a `sold_out` listing to active will update the quantity to 1 and renew the listing on etsy.com. */
    @SerialName(value = "state") val state: ShopListing.State? = null,

    /* The listing's creation time, in epoch seconds. */
    @SerialName(value = "creation_timestamp") val creationTimestamp: kotlin.Int? = null,

    /* The listing's creation time, in epoch seconds. */
    @SerialName(value = "created_timestamp") val createdTimestamp: kotlin.Int? = null,

    /* The listing's expiration time, in epoch seconds. */
    @SerialName(value = "ending_timestamp") val endingTimestamp: kotlin.Int? = null,

    /* The listing's creation time, in epoch seconds. */
    @SerialName(value = "original_creation_timestamp") val originalCreationTimestamp: kotlin.Int? = null,

    /* The time of the last update to the listing, in epoch seconds. */
    @SerialName(value = "last_modified_timestamp") val lastModifiedTimestamp: kotlin.Int? = null,

    /* The time of the last update to the listing, in epoch seconds. */
    @SerialName(value = "updated_timestamp") val updatedTimestamp: kotlin.Int? = null,

    /* The date and time of the last state change of this listing. */
    @SerialName(value = "state_timestamp") val stateTimestamp: kotlin.Int? = null,

    /* The positive non-zero number of products available for purchase in the listing. Note: The listing quantity is the sum of available offering quantities. You can request the quantities for individual offerings from the ListingInventory resource using the [getListingInventory](/documentation/reference#operation/getListingInventory) endpoint. */
    @SerialName(value = "quantity") val quantity: kotlin.Int? = null,

    /* The numeric ID of a section in a specific Etsy shop. */
    @SerialName(value = "shop_section_id") val shopSectionId: kotlin.Long? = null,

    /* The positive non-zero numeric position in the featured listings of the shop, with rank 1 listings appearing in the left-most position in featured listing on a shop's home page. */
    @SerialName(value = "featured_rank") val featuredRank: kotlin.Int? = null,

    /* The full URL to the listing's page on Etsy. */
    @SerialName(value = "url") val url: kotlin.String? = null,

    /* The number of users who marked this Listing a favorite. */
    @SerialName(value = "num_favorers") val numFavorers: kotlin.Int? = null,

    /* When true, applicable [shop](/documentation/reference#tag/Shop) tax rates do not apply to this listing at checkout. */
    @SerialName(value = "non_taxable") val nonTaxable: kotlin.Boolean? = null,

    /* When true, applicable [shop](/documentation/reference#tag/Shop) tax rates apply to this listing at checkout. */
    @SerialName(value = "is_taxable") val isTaxable: kotlin.Boolean? = null,

    /* When true, a buyer may contact the seller for a customized order. The default value is true when a shop accepts custom orders. Does not apply to shops that do not accept custom orders. */
    @SerialName(value = "is_customizable") val isCustomizable: kotlin.Boolean? = null,

    /* When true, this listing is personalizable. The default value is null. */
    @SerialName(value = "is_personalizable") val isPersonalizable: kotlin.Boolean? = null,

    /* When true, this listing requires personalization. The default value is null. Will only change if is_personalizable is 'true'. */
    @SerialName(value = "personalization_is_required") val personalizationIsRequired: kotlin.Boolean? = null,

    /* This is an integer value representing the maximum length for the personalization message entered by the buyer. Will only change if is_personalizable is 'true'. */
    @SerialName(value = "personalization_char_count_max") val personalizationCharCountMax: kotlin.Int? = null,

    /* When true, this listing requires personalization. The default value is null. Will only change if is_personalizable is 'true'. */
    @SerialName(value = "personalization_instructions") val personalizationInstructions: kotlin.String? = null,

    /* An enumerated type string that indicates whether the listing is physical or a digital download. */
    @SerialName(value = "listing_type") val listingType: ShopListing.ListingType? = null,

    /* A comma-separated list of tag strings for the listing. When creating or updating a listing, valid tag strings contain only letters, numbers, whitespace characters, -, ', ™, ©, and ®. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}\\-'™©®]/u) Default value is null. */
    @SerialName(value = "tags") val tags: kotlin.collections.List<kotlin.String>? = null,

    /* A list of material strings for materials used in the product. Valid materials strings contain only letters, numbers, and whitespace characters. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}]/u) Default value is null. */
    @SerialName(value = "materials") val materials: kotlin.collections.List<kotlin.String>? = null,

    /* The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile) associated with the listing. Required when listing type is `physical`. */
    @SerialName(value = "shipping_profile_id") val shippingProfileId: kotlin.Long? = null,

    /* The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies). */
    @SerialName(value = "return_policy_id") val returnPolicyId: kotlin.Long? = null,

    /* The minimum number of days required to process this listing. Default value is null. */
    @SerialName(value = "processing_min") val processingMin: kotlin.Int? = null,

    /* The maximum number of days required to process this listing. Default value is null. */
    @SerialName(value = "processing_max") val processingMax: kotlin.Int? = null,

    /* An enumerated string indicating who made the product. Helps buyers locate the listing under the Handmade heading. Requires 'is_supply' and 'when_made'. */
    @SerialName(value = "who_made") val whoMade: ShopListing.WhoMade? = null,

    /* An enumerated string for the era in which the maker made the product in this listing. Helps buyers locate the listing under the Vintage heading. Requires 'is_supply' and 'who_made'. */
    @SerialName(value = "when_made") val whenMade: ShopListing.WhenMade? = null,

    /* When true, tags the listing as a supply product, else indicates that it's a finished product. Helps buyers locate the listing under the Supplies heading. Requires 'who_made' and 'when_made'. */
    @SerialName(value = "is_supply") val isSupply: kotlin.Boolean? = null,

    /* The numeric weight of the product measured in units set in 'item_weight_unit'. Default value is null. If set, the value must be greater than 0. */
    @SerialName(value = "item_weight") val itemWeight: kotlin.Float? = null,

    /* A string defining the units used to measure the weight of the product. Default value is null. */
    @SerialName(value = "item_weight_unit") val itemWeightUnit: ShopListing.ItemWeightUnit? = null,

    /* The numeric length of the product measured in units set in 'item_dimensions_unit'. Default value is null. If set, the value must be greater than 0. */
    @SerialName(value = "item_length") val itemLength: kotlin.Float? = null,

    /* The numeric width of the product measured in units set in 'item_dimensions_unit'. Default value is null. If set, the value must be greater than 0. */
    @SerialName(value = "item_width") val itemWidth: kotlin.Float? = null,

    /* The numeric length of the product measured in units set in 'item_dimensions_unit'. Default value is null. If set, the value must be greater than 0. */
    @SerialName(value = "item_height") val itemHeight: kotlin.Float? = null,

    /* A string defining the units used to measure the dimensions of the product. Default value is null. */
    @SerialName(value = "item_dimensions_unit") val itemDimensionsUnit: ShopListing.ItemDimensionsUnit? = null,

    /* When true, this is a private listing intended for a specific buyer and hidden from shop view. */
    @SerialName(value = "is_private") val isPrivate: kotlin.Boolean? = null,

    /* An array of style strings for this listing, each of which is free-form text string such as \"Formal\", or \"Steampunk\". When creating or updating a listing, the listing may have up to two styles. Valid style strings contain only letters, numbers, and whitespace characters. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}]/u) Default value is null. */
    @SerialName(value = "style") val style: kotlin.collections.List<kotlin.String>? = null,

    /* A string describing the files attached to a digital listing. */
    @SerialName(value = "file_data") val fileData: kotlin.String? = null,

    /* When true, the listing has variations. */
    @SerialName(value = "has_variations") val hasVariations: kotlin.Boolean? = null,

    /* When true, renews a listing for four months upon expiration. */
    @SerialName(value = "should_auto_renew") val shouldAutoRenew: kotlin.Boolean? = null,

    /* The IETF language tag for the default language of the listing. Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`, `ru`. */
    @SerialName(value = "language") val language: kotlin.String? = null,

    /* The positive non-zero price of the product. (Sold product listings are private) Note: The price is the minimum possible price. The [`getListingInventory`](/documentation/reference/#operation/getListingInventory) method requests exact prices for available offerings. */
    @SerialName(value = "price") val price: Money? = null,

    /* The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy) and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more information. */
    @SerialName(value = "taxonomy_id") val taxonomyId: kotlin.Int? = null,

    /* The numeric ID of the [processing profile](/documentation/reference#operation/getShopReadinessStateDefinition) associated with the listing. Required when listing type is `physical`. */
    @SerialName(value = "readiness_state_id") val readinessStateId: kotlin.Long? = null

) {

    /**
     * When _updating_ a listing, this value can be either `active` or `inactive`. Note: Setting a `draft` listing to `active` will also publish the listing on etsy.com and requires that the listing have an image set. Setting a `sold_out` listing to active will update the quantity to 1 and renew the listing on etsy.com.
     *
     * Values: active,inactive,sold_out,draft,expired
     */
    @Serializable
    enum class State(val value: kotlin.String) {
        @SerialName(value = "active") active("active"),
        @SerialName(value = "inactive") inactive("inactive"),
        @SerialName(value = "sold_out") sold_out("sold_out"),
        @SerialName(value = "draft") draft("draft"),
        @SerialName(value = "expired") expired("expired");
    }
    /**
     * An enumerated type string that indicates whether the listing is physical or a digital download.
     *
     * Values: physical,download,both
     */
    @Serializable
    enum class ListingType(val value: kotlin.String) {
        @SerialName(value = "physical") physical("physical"),
        @SerialName(value = "download") download("download"),
        @SerialName(value = "both") both("both");
    }
    /**
     * An enumerated string indicating who made the product. Helps buyers locate the listing under the Handmade heading. Requires 'is_supply' and 'when_made'.
     *
     * Values: i_did,someone_else,collective
     */
    @Serializable
    enum class WhoMade(val value: kotlin.String) {
        @SerialName(value = "i_did") i_did("i_did"),
        @SerialName(value = "someone_else") someone_else("someone_else"),
        @SerialName(value = "collective") collective("collective");
    }
    /**
     * An enumerated string for the era in which the maker made the product in this listing. Helps buyers locate the listing under the Vintage heading. Requires 'is_supply' and 'who_made'.
     *
     * Values: made_to_order,_2020_2025,_2010_2019,_2006_2009,before_2006,_2000_2005,_1990s,_1980s,_1970s,_1960s,_1950s,_1940s,_1930s,_1920s,_1910s,_1900s,_1800s,_1700s,before_1700
     */
    @Serializable
    enum class WhenMade(val value: kotlin.String) {
        @SerialName(value = "made_to_order") made_to_order("made_to_order"),
        @SerialName(value = "2020_2025") _2020_2025("2020_2025"),
        @SerialName(value = "2010_2019") _2010_2019("2010_2019"),
        @SerialName(value = "2006_2009") _2006_2009("2006_2009"),
        @SerialName(value = "before_2006") before_2006("before_2006"),
        @SerialName(value = "2000_2005") _2000_2005("2000_2005"),
        @SerialName(value = "1990s") _1990s("1990s"),
        @SerialName(value = "1980s") _1980s("1980s"),
        @SerialName(value = "1970s") _1970s("1970s"),
        @SerialName(value = "1960s") _1960s("1960s"),
        @SerialName(value = "1950s") _1950s("1950s"),
        @SerialName(value = "1940s") _1940s("1940s"),
        @SerialName(value = "1930s") _1930s("1930s"),
        @SerialName(value = "1920s") _1920s("1920s"),
        @SerialName(value = "1910s") _1910s("1910s"),
        @SerialName(value = "1900s") _1900s("1900s"),
        @SerialName(value = "1800s") _1800s("1800s"),
        @SerialName(value = "1700s") _1700s("1700s"),
        @SerialName(value = "before_1700") before_1700("before_1700");
    }
    /**
     * A string defining the units used to measure the weight of the product. Default value is null.
     *
     * Values: oz,lb,g,kg
     */
    @Serializable
    enum class ItemWeightUnit(val value: kotlin.String) {
        @SerialName(value = "oz") oz("oz"),
        @SerialName(value = "lb") lb("lb"),
        @SerialName(value = "g") g("g"),
        @SerialName(value = "kg") kg("kg");
    }
    /**
     * A string defining the units used to measure the dimensions of the product. Default value is null.
     *
     * Values: `in`,ft,mm,cm,m,yd,inches
     */
    @Serializable
    enum class ItemDimensionsUnit(val value: kotlin.String) {
        @SerialName(value = "in") `in`("in"),
        @SerialName(value = "ft") ft("ft"),
        @SerialName(value = "mm") mm("mm"),
        @SerialName(value = "cm") cm("cm"),
        @SerialName(value = "m") m("m"),
        @SerialName(value = "yd") yd("yd"),
        @SerialName(value = "inches") inches("inches");
    }

}

