/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * Reference urls and metadata for an image associated with a specific listing. The `url_fullxfull` parameter contains the URL for full-sized binary image file.
 *
 * @param listingId The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
 * @param listingImageId The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.
 * @param hexCode The webhex string for the image's average color, in webhex notation.
 * @param red The numeric red value equal to the image's average red value, from 0-255 (RGB color).
 * @param green The numeric red value equal to the image's average red value, from 0-255 (RGB color).
 * @param blue The numeric red value equal to the image's average red value, from 0-255 (RGB color).
 * @param hue The numeric hue equal to the image's average hue, from 0-360 (HSV color).
 * @param saturation The numeric saturation equal to the image's average saturation, from 0-100 (HSV color).
 * @param brightness The numeric brightness equal to the image's average brightness, from 0-100 (HSV color).
 * @param isBlackAndWhite When true, the image is in black & white.
 * @param creationTsz The listing image's creation time, in epoch seconds.
 * @param createdTimestamp The listing image's creation time, in epoch seconds.
 * @param rank The positive non-zero numeric position in the images displayed in a listing, with rank 1 images appearing in the left-most position in a listing.
 * @param url75x75 The url string for a 75x75 pixel thumbnail of the image.
 * @param url170x135 The url string for a 170x135 pixel thumbnail of the image.
 * @param url570xN The url string for a thumbnail of the image, no more than 570 pixels wide with variable height.
 * @param urlFullxfull The url string for the full-size image, up to 3000 pixels in each dimension.
 * @param fullHeight The numeric height, measured in pixels, of the full-sized image referenced in url_fullxfull.
 * @param fullWidth The numeric width, measured in pixels, of the full-sized image referenced in url_fullxfull.
 * @param altText Alt text for the listing image. Max length 500 characters.
 */
@Serializable

data class ListingImage (

    /* The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction. */
    @SerialName(value = "listing_id") val listingId: kotlin.Long? = null,

    /* The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction. */
    @SerialName(value = "listing_image_id") val listingImageId: kotlin.Long? = null,

    /* The webhex string for the image's average color, in webhex notation. */
    @SerialName(value = "hex_code") val hexCode: kotlin.String? = null,

    /* The numeric red value equal to the image's average red value, from 0-255 (RGB color). */
    @SerialName(value = "red") val red: kotlin.Int? = null,

    /* The numeric red value equal to the image's average red value, from 0-255 (RGB color). */
    @SerialName(value = "green") val green: kotlin.Int? = null,

    /* The numeric red value equal to the image's average red value, from 0-255 (RGB color). */
    @SerialName(value = "blue") val blue: kotlin.Int? = null,

    /* The numeric hue equal to the image's average hue, from 0-360 (HSV color). */
    @SerialName(value = "hue") val hue: kotlin.Int? = null,

    /* The numeric saturation equal to the image's average saturation, from 0-100 (HSV color). */
    @SerialName(value = "saturation") val saturation: kotlin.Int? = null,

    /* The numeric brightness equal to the image's average brightness, from 0-100 (HSV color). */
    @SerialName(value = "brightness") val brightness: kotlin.Int? = null,

    /* When true, the image is in black & white. */
    @SerialName(value = "is_black_and_white") val isBlackAndWhite: kotlin.Boolean? = null,

    /* The listing image's creation time, in epoch seconds. */
    @SerialName(value = "creation_tsz") val creationTsz: kotlin.Int? = null,

    /* The listing image's creation time, in epoch seconds. */
    @SerialName(value = "created_timestamp") val createdTimestamp: kotlin.Int? = null,

    /* The positive non-zero numeric position in the images displayed in a listing, with rank 1 images appearing in the left-most position in a listing. */
    @SerialName(value = "rank") val rank: kotlin.Int? = null,

    /* The url string for a 75x75 pixel thumbnail of the image. */
    @SerialName(value = "url_75x75") val url75x75: kotlin.String? = null,

    /* The url string for a 170x135 pixel thumbnail of the image. */
    @SerialName(value = "url_170x135") val url170x135: kotlin.String? = null,

    /* The url string for a thumbnail of the image, no more than 570 pixels wide with variable height. */
    @SerialName(value = "url_570xN") val url570xN: kotlin.String? = null,

    /* The url string for the full-size image, up to 3000 pixels in each dimension. */
    @SerialName(value = "url_fullxfull") val urlFullxfull: kotlin.String? = null,

    /* The numeric height, measured in pixels, of the full-sized image referenced in url_fullxfull. */
    @SerialName(value = "full_height") val fullHeight: kotlin.Int? = null,

    /* The numeric width, measured in pixels, of the full-sized image referenced in url_fullxfull. */
    @SerialName(value = "full_width") val fullWidth: kotlin.Int? = null,

    /* Alt text for the listing image. Max length 500 characters. */
    @SerialName(value = "alt_text") val altText: kotlin.String? = null

) {


}

