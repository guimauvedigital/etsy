/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.models

import com.etsy.models.Money
import com.etsy.models.PaymentAdjustment

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * Represents a payment made with Etsy Payments. All monetary amounts are in USD pennies unless otherwise specified.
 *
 * @param paymentId A unique numeric ID for a payment to a specific Etsy [shop](/documentation/reference#tag/Shop).
 * @param buyerUserId The numeric ID for the [user](/documentation/reference#tag/User) who paid the purchase.
 * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
 * @param receiptId The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
 * @param amountGross An integer equal to gross amount of the order, in pennies, including shipping and taxes.
 * @param amountFees An integer equal to the original card processing fee of the order in pennies.
 * @param amountNet An integer equal to the payment value, in pennies, less fees (`amount_gross` - `amount_fees`).
 * @param postedGross The total gross value of the payment posted once the purchase ships. This is equal to the `amount_gross` UNLESS the seller issues a refund prior to shipping. We consider \"shipping\" to be the event which \"posts\" to the ledger. Therefore, if the seller refunds first, we reduce the `amount_gross` first and post then that amount. The seller never sees the refunded amount in their ledger. This is equal to the \"Credit\" amount in the ledger entry.
 * @param postedFees The total value of the fees posted once the purchase ships. Etsy refunds a proportional amount of the fees when a seller refunds a buyer. When the seller issues a refund prior to shipping, the posted amount is less then the original.
 * @param postedNet The total value of the payment at the time of posting, less fees. (`posted_gross` - `posted_fees`)
 * @param adjustedGross The gross payment amount after the seller refunds a payment, partially or fully.
 * @param adjustedFees The new fee amount after a seller refunds a payment, partially or fully.
 * @param adjustedNet The total value of the payment after refunds, less fees (`adjusted_gross` - `adjusted_fees`).
 * @param currency The ISO (alphabetic) code string for the payment's currency.
 * @param shopCurrency The ISO (alphabetic) code for the shop's currency. The shop displays all prices in this currency by default.
 * @param buyerCurrency The currency string of the buyer.
 * @param shippingUserId The numeric ID of the user to which the seller ships the order.
 * @param shippingAddressId The numeric id identifying the shipping address.
 * @param billingAddressId The numeric ID identifying the billing address of the buyer.
 * @param status A string indicating the current status of the payment, most commonly \"settled\" or \"authed\".
 * @param shippedTimestamp The transaction's shipping date and time, in epoch seconds.
 * @param createTimestamp The transaction's creation date and time, in epoch seconds.
 * @param createdTimestamp The transaction's creation date and time, in epoch seconds.
 * @param updateTimestamp The date and time of the last change to the payment adjustment in epoch seconds.
 * @param updatedTimestamp The date and time of the last change to the payment adjustment in epoch seconds.
 * @param paymentAdjustments List of refund objects on an Etsy Payments transaction. All monetary amounts are in USD pennies unless otherwise specified.
 */
@Serializable

data class Payment (

    /* A unique numeric ID for a payment to a specific Etsy [shop](/documentation/reference#tag/Shop). */
    @SerialName(value = "payment_id") val paymentId: kotlin.Long? = null,

    /* The numeric ID for the [user](/documentation/reference#tag/User) who paid the purchase. */
    @SerialName(value = "buyer_user_id") val buyerUserId: kotlin.Long? = null,

    /* The unique positive non-zero numeric ID for an Etsy Shop. */
    @SerialName(value = "shop_id") val shopId: kotlin.Long? = null,

    /* The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction. */
    @SerialName(value = "receipt_id") val receiptId: kotlin.Long? = null,

    /* An integer equal to gross amount of the order, in pennies, including shipping and taxes. */
    @SerialName(value = "amount_gross") val amountGross: Money? = null,

    /* An integer equal to the original card processing fee of the order in pennies. */
    @SerialName(value = "amount_fees") val amountFees: Money? = null,

    /* An integer equal to the payment value, in pennies, less fees (`amount_gross` - `amount_fees`). */
    @SerialName(value = "amount_net") val amountNet: Money? = null,

    /* The total gross value of the payment posted once the purchase ships. This is equal to the `amount_gross` UNLESS the seller issues a refund prior to shipping. We consider \"shipping\" to be the event which \"posts\" to the ledger. Therefore, if the seller refunds first, we reduce the `amount_gross` first and post then that amount. The seller never sees the refunded amount in their ledger. This is equal to the \"Credit\" amount in the ledger entry. */
    @SerialName(value = "posted_gross") val postedGross: Money? = null,

    /* The total value of the fees posted once the purchase ships. Etsy refunds a proportional amount of the fees when a seller refunds a buyer. When the seller issues a refund prior to shipping, the posted amount is less then the original. */
    @SerialName(value = "posted_fees") val postedFees: Money? = null,

    /* The total value of the payment at the time of posting, less fees. (`posted_gross` - `posted_fees`) */
    @SerialName(value = "posted_net") val postedNet: Money? = null,

    /* The gross payment amount after the seller refunds a payment, partially or fully. */
    @SerialName(value = "adjusted_gross") val adjustedGross: Money? = null,

    /* The new fee amount after a seller refunds a payment, partially or fully. */
    @SerialName(value = "adjusted_fees") val adjustedFees: Money? = null,

    /* The total value of the payment after refunds, less fees (`adjusted_gross` - `adjusted_fees`). */
    @SerialName(value = "adjusted_net") val adjustedNet: Money? = null,

    /* The ISO (alphabetic) code string for the payment's currency. */
    @SerialName(value = "currency") val currency: kotlin.String? = null,

    /* The ISO (alphabetic) code for the shop's currency. The shop displays all prices in this currency by default. */
    @SerialName(value = "shop_currency") val shopCurrency: kotlin.String? = null,

    /* The currency string of the buyer. */
    @SerialName(value = "buyer_currency") val buyerCurrency: kotlin.String? = null,

    /* The numeric ID of the user to which the seller ships the order. */
    @SerialName(value = "shipping_user_id") val shippingUserId: kotlin.Long? = null,

    /* The numeric id identifying the shipping address. */
    @SerialName(value = "shipping_address_id") val shippingAddressId: kotlin.Long? = null,

    /* The numeric ID identifying the billing address of the buyer. */
    @SerialName(value = "billing_address_id") val billingAddressId: kotlin.Int? = null,

    /* A string indicating the current status of the payment, most commonly \"settled\" or \"authed\". */
    @SerialName(value = "status") val status: kotlin.String? = null,

    /* The transaction's shipping date and time, in epoch seconds. */
    @SerialName(value = "shipped_timestamp") val shippedTimestamp: kotlin.Int? = null,

    /* The transaction's creation date and time, in epoch seconds. */
    @SerialName(value = "create_timestamp") val createTimestamp: kotlin.Int? = null,

    /* The transaction's creation date and time, in epoch seconds. */
    @SerialName(value = "created_timestamp") val createdTimestamp: kotlin.Int? = null,

    /* The date and time of the last change to the payment adjustment in epoch seconds. */
    @SerialName(value = "update_timestamp") val updateTimestamp: kotlin.Int? = null,

    /* The date and time of the last change to the payment adjustment in epoch seconds. */
    @SerialName(value = "updated_timestamp") val updatedTimestamp: kotlin.Int? = null,

    /* List of refund objects on an Etsy Payments transaction. All monetary amounts are in USD pennies unless otherwise specified. */
    @SerialName(value = "payment_adjustments") val paymentAdjustments: kotlin.collections.List<PaymentAdjustment>? = null

) {


}

