/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.models

import com.etsy.models.UpdateListingInventoryRequestProductsInner

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param products A JSON array of products available in a listing, even if only one product. All field names in the JSON blobs are lowercase.
 * @param priceOnProperty An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change product prices, if any. For example, if you charge specific prices for different sized products in the same listing, then this array contains the property ID for size.
 * @param quantityOnProperty An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change the quantity of the products, if any. For example, if you stock specific quantities of different colored products in the same listing, then this array contains the property ID for color.
 * @param skuOnProperty An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change the product SKU, if any. For example, if you use specific skus for different colored products in the same listing, then this array contains the property ID for color.
 * @param readinessStateOnProperty An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change processing profile, if any. For example, if you need specific processing profiles for different colored products in the same listing, then this array contains the property ID for color.
 */
@Serializable

data class UpdateListingInventoryRequest (

    /* A JSON array of products available in a listing, even if only one product. All field names in the JSON blobs are lowercase. */
    @SerialName(value = "products") @Required val products: kotlin.collections.List<UpdateListingInventoryRequestProductsInner>,

    /* An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change product prices, if any. For example, if you charge specific prices for different sized products in the same listing, then this array contains the property ID for size. */
    @SerialName(value = "price_on_property") val priceOnProperty: kotlin.collections.List<kotlin.Int>? = null,

    /* An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change the quantity of the products, if any. For example, if you stock specific quantities of different colored products in the same listing, then this array contains the property ID for color. */
    @SerialName(value = "quantity_on_property") val quantityOnProperty: kotlin.collections.List<kotlin.Int>? = null,

    /* An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change the product SKU, if any. For example, if you use specific skus for different colored products in the same listing, then this array contains the property ID for color. */
    @SerialName(value = "sku_on_property") val skuOnProperty: kotlin.collections.List<kotlin.Int>? = null,

    /* An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change processing profile, if any. For example, if you need specific processing profiles for different colored products in the same listing, then this array contains the property ID for color. */
    @SerialName(value = "readiness_state_on_property") val readinessStateOnProperty: kotlin.collections.List<kotlin.Long>? = null

) {


}

