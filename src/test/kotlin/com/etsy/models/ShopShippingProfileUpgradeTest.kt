/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.etsy.models.ShopShippingProfileUpgrade
import com.etsy.models.Money

class ShopShippingProfileUpgradeTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ShopShippingProfileUpgrade
        //val modelInstance = ShopShippingProfileUpgrade()

        // to test the property `shippingProfileId` - The numeric ID of the base shipping profile.
        should("test shippingProfileId") {
            // uncomment below to test the property
            //modelInstance.shippingProfileId shouldBe ("TODO")
        }

        // to test the property `upgradeId` - The numeric ID that is associated with a shipping upgrade
        should("test upgradeId") {
            // uncomment below to test the property
            //modelInstance.upgradeId shouldBe ("TODO")
        }

        // to test the property `upgradeName` - Name for the shipping upgrade shown to shoppers at checkout, e.g. USPS Priority.
        should("test upgradeName") {
            // uncomment below to test the property
            //modelInstance.upgradeName shouldBe ("TODO")
        }

        // to test the property `type` - The type of the shipping upgrade. Domestic (0) or international (1).
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `rank` - The positive non-zero numeric position in the images displayed in a listing, with rank 1 images appearing in the left-most position in a listing.
        should("test rank") {
            // uncomment below to test the property
            //modelInstance.rank shouldBe ("TODO")
        }

        // to test the property `language` - The IETF language tag for the language of the shipping profile. Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`
        should("test language") {
            // uncomment below to test the property
            //modelInstance.language shouldBe ("TODO")
        }

        // to test the property `price` - Additional cost of adding the shipping upgrade.
        should("test price") {
            // uncomment below to test the property
            //modelInstance.price shouldBe ("TODO")
        }

        // to test the property `secondaryPrice` - Additional cost of adding the shipping upgrade for each additional item.
        should("test secondaryPrice") {
            // uncomment below to test the property
            //modelInstance.secondaryPrice shouldBe ("TODO")
        }

        // to test the property `shippingCarrierId` - The unique ID of a supported shipping carrier, which is used to calculate an Estimated Delivery Date. **Required with `mail_class`** if `min_delivery_days` and `max_delivery_days` are null.
        should("test shippingCarrierId") {
            // uncomment below to test the property
            //modelInstance.shippingCarrierId shouldBe ("TODO")
        }

        // to test the property `mailClass` - The unique ID string of a shipping carrier's mail class, which is used to calculate an estimated delivery date. **Required with `shipping_carrier_id`** if `min_delivery_days` and `max_delivery_days` are null.
        should("test mailClass") {
            // uncomment below to test the property
            //modelInstance.mailClass shouldBe ("TODO")
        }

        // to test the property `minDeliveryDays` - The minimum number of business days a buyer can expect to wait to receive their purchased item once it has shipped. **Required with `max_delivery_days`** if `mail_class` is null.
        should("test minDeliveryDays") {
            // uncomment below to test the property
            //modelInstance.minDeliveryDays shouldBe ("TODO")
        }

        // to test the property `maxDeliveryDays` - The maximum number of business days a buyer can expect to wait to receive their purchased item once it has shipped. **Required with `min_delivery_days`** if `mail_class` is null.
        should("test maxDeliveryDays") {
            // uncomment below to test the property
            //modelInstance.maxDeliveryDays shouldBe ("TODO")
        }

    }
}
