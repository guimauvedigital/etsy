/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.etsy.models.ListingReview

class ListingReviewTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ListingReview
        //val modelInstance = ListingReview()

        // to test the property `shopId` - The shop's numeric ID.
        should("test shopId") {
            // uncomment below to test the property
            //modelInstance.shopId shouldBe ("TODO")
        }

        // to test the property `listingId` - The ID of the ShopListing that the TransactionReview belongs to.
        should("test listingId") {
            // uncomment below to test the property
            //modelInstance.listingId shouldBe ("TODO")
        }

        // to test the property `rating` - Rating value on scale from 1 to 5
        should("test rating") {
            // uncomment below to test the property
            //modelInstance.rating shouldBe ("TODO")
        }

        // to test the property `review` - A message left by the author, explaining the feedback, if provided.
        should("test review") {
            // uncomment below to test the property
            //modelInstance.review shouldBe ("TODO")
        }

        // to test the property `language` - The language of the TransactionReview
        should("test language") {
            // uncomment below to test the property
            //modelInstance.language shouldBe ("TODO")
        }

        // to test the property `imageUrlFullxfull` - The url to a photo provided with the feedback, dimensions fullxfull. Note: This field may be absent, depending on the buyer's privacy settings.
        should("test imageUrlFullxfull") {
            // uncomment below to test the property
            //modelInstance.imageUrlFullxfull shouldBe ("TODO")
        }

        // to test the property `createTimestamp` - The date and time the TransactionReview was created in epoch seconds.
        should("test createTimestamp") {
            // uncomment below to test the property
            //modelInstance.createTimestamp shouldBe ("TODO")
        }

        // to test the property `createdTimestamp` - The date and time the TransactionReview was created in epoch seconds.
        should("test createdTimestamp") {
            // uncomment below to test the property
            //modelInstance.createdTimestamp shouldBe ("TODO")
        }

        // to test the property `updateTimestamp` - The date and time the TransactionReview was updated in epoch seconds.
        should("test updateTimestamp") {
            // uncomment below to test the property
            //modelInstance.updateTimestamp shouldBe ("TODO")
        }

        // to test the property `updatedTimestamp` - The date and time the TransactionReview was updated in epoch seconds.
        should("test updatedTimestamp") {
            // uncomment below to test the property
            //modelInstance.updatedTimestamp shouldBe ("TODO")
        }

    }
}
