/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.apis

import com.etsy.models.ErrorSchema
import com.etsy.models.ShopReturnPolicies
import com.etsy.models.ShopReturnPolicy

import com.etsy.infrastructure.*
import io.ktor.client.HttpClient
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

open class ShopReturnPolicyApi : ApiClient {

    constructor(
        baseUrl: String = ApiClient.BASE_URL,
        httpClientEngine: HttpClientEngine? = null,
        httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
        jsonSerializer: Json = ApiClient.JSON_DEFAULT
    ) : super(baseUrl = baseUrl, httpClientEngine = httpClientEngine, httpClientConfig = httpClientConfig, jsonBlock = jsonSerializer)

    constructor(
        baseUrl: String,
        httpClient: HttpClient
    ): super(baseUrl = baseUrl, httpClient = httpClient)

    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Consolidates Return Policies by moving all listings from a source return policy to a destination return policy, and deleting the source return policy. This is commonly used in the event that a user attempts to update a Return Policy such that its data is a duplicate of some other Return Policy, which is prevented.
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @param sourceReturnPolicyId The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
     * @param destinationReturnPolicyId The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
     * @return ShopReturnPolicy
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun consolidateShopReturnPolicies(shopId: kotlin.Long, sourceReturnPolicyId: kotlin.Long, destinationReturnPolicyId: kotlin.Long): HttpResponse<ShopReturnPolicy> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            ParametersBuilder().also {
                sourceReturnPolicyId?.apply { it.append("source_return_policy_id", sourceReturnPolicyId.toString()) }
                destinationReturnPolicyId?.apply { it.append("destination_return_policy_id", destinationReturnPolicyId.toString()) }
            }.build()

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/v3/application/shops/{shop_id}/policies/return/consolidate".replace("{" + "shop_id" + "}", "$shopId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return urlEncodedFormRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Creates a new Return Policy. Note: if either accepts_returns or accepts_exchanges is true, then a return_deadline is required.
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @param acceptsReturns 
     * @param acceptsExchanges 
     * @param returnDeadline The deadline for the Return Policy, measured in days. The value must be one of the following: [7, 14, 21, 30, 45, 60, 90]. (optional)
     * @return ShopReturnPolicy
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun createShopReturnPolicy(shopId: kotlin.Long, acceptsReturns: kotlin.Boolean, acceptsExchanges: kotlin.Boolean, returnDeadline: kotlin.Int? = null): HttpResponse<ShopReturnPolicy> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            ParametersBuilder().also {
                acceptsReturns?.apply { it.append("accepts_returns", acceptsReturns.toString()) }
                acceptsExchanges?.apply { it.append("accepts_exchanges", acceptsExchanges.toString()) }
                returnDeadline?.apply { it.append("return_deadline", returnDeadline.toString()) }
            }.build()

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/v3/application/shops/{shop_id}/policies/return".replace("{" + "shop_id" + "}", "$shopId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return urlEncodedFormRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Deletes an existing Return Policy. Deletion is only allowed for policies which have no associated listings â€“ move them to another policy before attempting deletion.
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @param returnPolicyId The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
     * @return void
     */
    open suspend fun deleteShopReturnPolicy(shopId: kotlin.Long, returnPolicyId: kotlin.Long): HttpResponse<Unit> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.DELETE,
            "/v3/application/shops/{shop_id}/policies/return/{return_policy_id}".replace("{" + "shop_id" + "}", "$shopId").replace("{" + "return_policy_id" + "}", "$returnPolicyId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Returns a shop&#39;s list of existing Return Policies
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @return ShopReturnPolicies
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getShopReturnPolicies(shopId: kotlin.Long): HttpResponse<ShopReturnPolicies> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/v3/application/shops/{shop_id}/policies/return".replace("{" + "shop_id" + "}", "$shopId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Retrieves an existing Return Policy.
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @param returnPolicyId The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
     * @return ShopReturnPolicy
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getShopReturnPolicy(shopId: kotlin.Long, returnPolicyId: kotlin.Long): HttpResponse<ShopReturnPolicy> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/v3/application/shops/{shop_id}/policies/return/{return_policy_id}".replace("{" + "shop_id" + "}", "$shopId").replace("{" + "return_policy_id" + "}", "$returnPolicyId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Updates an existing Return Policy. Note: if either accepts_returns or accepts_exchanges is true, then a return_deadline is required.
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @param returnPolicyId The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
     * @param acceptsReturns 
     * @param acceptsExchanges 
     * @param returnDeadline The deadline for the Return Policy, measured in days. The value must be one of the following: [7, 14, 21, 30, 45, 60, 90]. (optional)
     * @return ShopReturnPolicy
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun updateShopReturnPolicy(shopId: kotlin.Long, returnPolicyId: kotlin.Long, acceptsReturns: kotlin.Boolean, acceptsExchanges: kotlin.Boolean, returnDeadline: kotlin.Int? = null): HttpResponse<ShopReturnPolicy> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            ParametersBuilder().also {
                acceptsReturns?.apply { it.append("accepts_returns", acceptsReturns.toString()) }
                acceptsExchanges?.apply { it.append("accepts_exchanges", acceptsExchanges.toString()) }
                returnDeadline?.apply { it.append("return_deadline", returnDeadline.toString()) }
            }.build()

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.PUT,
            "/v3/application/shops/{shop_id}/policies/return/{return_policy_id}".replace("{" + "shop_id" + "}", "$shopId").replace("{" + "return_policy_id" + "}", "$returnPolicyId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return urlEncodedFormRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


}
