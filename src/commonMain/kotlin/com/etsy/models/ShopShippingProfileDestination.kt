/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.models

import com.etsy.models.Money

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * Represents a shipping destination assigned to a shipping profile.
 *
 * @param shippingProfileDestinationId The numeric ID of the shipping profile destination in the [shipping profile](/documentation/reference#tag/Shop-ShippingProfile) associated with the listing.
 * @param shippingProfileId The numeric ID of the shipping profile.
 * @param originCountryIso The ISO code of the country from which the listing ships.
 * @param destinationCountryIso The ISO code of the country to which the listing ships. If null, request sets destination to destination_region. Required if destination_region is null or not provided.
 * @param destinationRegion The code of the region to which the listing ships. A region represents a set of countries. Supported regions are Europe Union and Non-Europe Union (countries in Europe not in EU). If `none`, request sets destination to destination_country_iso. Required if destination_country_iso is null or not provided.
 * @param primaryCost The cost of shipping to this country/region alone, measured in the store's default currency.
 * @param secondaryCost The cost of shipping to this country/region with another item, measured in the store's default currency.
 * @param shippingCarrierId The unique ID of a supported shipping carrier, which is used to calculate an Estimated Delivery Date. **Required with `mail_class`** if `min_delivery_days` and `max_delivery_days` are null.
 * @param mailClass The unique ID string of a shipping carrier's mail class, which is used to calculate an estimated delivery date. **Required with `shipping_carrier_id`** if `min_delivery_days` and `max_delivery_days` are null.
 * @param minDeliveryDays The minimum number of business days a buyer can expect to wait to receive their purchased item once it has shipped. **Required with `max_delivery_days`** if `mail_class` is null.
 * @param maxDeliveryDays The maximum number of business days a buyer can expect to wait to receive their purchased item once it has shipped. **Required with `min_delivery_days`** if `mail_class` is null.
 */
@Serializable

data class ShopShippingProfileDestination (

    /* The numeric ID of the shipping profile destination in the [shipping profile](/documentation/reference#tag/Shop-ShippingProfile) associated with the listing. */
    @SerialName(value = "shipping_profile_destination_id") val shippingProfileDestinationId: kotlin.Long? = null,

    /* The numeric ID of the shipping profile. */
    @SerialName(value = "shipping_profile_id") val shippingProfileId: kotlin.Long? = null,

    /* The ISO code of the country from which the listing ships. */
    @SerialName(value = "origin_country_iso") val originCountryIso: kotlin.String? = null,

    /* The ISO code of the country to which the listing ships. If null, request sets destination to destination_region. Required if destination_region is null or not provided. */
    @SerialName(value = "destination_country_iso") val destinationCountryIso: kotlin.String? = null,

    /* The code of the region to which the listing ships. A region represents a set of countries. Supported regions are Europe Union and Non-Europe Union (countries in Europe not in EU). If `none`, request sets destination to destination_country_iso. Required if destination_country_iso is null or not provided. */
    @SerialName(value = "destination_region") val destinationRegion: ShopShippingProfileDestination.DestinationRegion? = null,

    /* The cost of shipping to this country/region alone, measured in the store's default currency. */
    @SerialName(value = "primary_cost") val primaryCost: Money? = null,

    /* The cost of shipping to this country/region with another item, measured in the store's default currency. */
    @SerialName(value = "secondary_cost") val secondaryCost: Money? = null,

    /* The unique ID of a supported shipping carrier, which is used to calculate an Estimated Delivery Date. **Required with `mail_class`** if `min_delivery_days` and `max_delivery_days` are null. */
    @SerialName(value = "shipping_carrier_id") val shippingCarrierId: kotlin.Int? = null,

    /* The unique ID string of a shipping carrier's mail class, which is used to calculate an estimated delivery date. **Required with `shipping_carrier_id`** if `min_delivery_days` and `max_delivery_days` are null. */
    @SerialName(value = "mail_class") val mailClass: kotlin.String? = null,

    /* The minimum number of business days a buyer can expect to wait to receive their purchased item once it has shipped. **Required with `max_delivery_days`** if `mail_class` is null. */
    @SerialName(value = "min_delivery_days") val minDeliveryDays: kotlin.Int? = null,

    /* The maximum number of business days a buyer can expect to wait to receive their purchased item once it has shipped. **Required with `min_delivery_days`** if `mail_class` is null. */
    @SerialName(value = "max_delivery_days") val maxDeliveryDays: kotlin.Int? = null

) {

    /**
     * The code of the region to which the listing ships. A region represents a set of countries. Supported regions are Europe Union and Non-Europe Union (countries in Europe not in EU). If `none`, request sets destination to destination_country_iso. Required if destination_country_iso is null or not provided.
     *
     * Values: eu,non_eu,none
     */
    @Serializable
    enum class DestinationRegion(val value: kotlin.String) {
        @SerialName(value = "eu") eu("eu"),
        @SerialName(value = "non_eu") non_eu("non_eu"),
        @SerialName(value = "none") none("none");
    }

}

