/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.etsy.apis.ShopReceiptApi
import com.etsy.models.ErrorSchema
import com.etsy.models.ShopReceipt
import com.etsy.models.ShopReceipts

class ShopReceiptApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ShopReceiptApi
        //val apiInstance = ShopReceiptApi()

        // to test createReceiptShipment
        should("test createReceiptShipment") {
            // uncomment below to test createReceiptShipment
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val receiptId : kotlin.Long = 789 // kotlin.Long | The receipt to submit tracking for.
            //val legacy : kotlin.Boolean = true // kotlin.Boolean | This parameter needed to enable new parameters and response values related to processing profiles.
            //val trackingCode : kotlin.String = trackingCode_example // kotlin.String | The tracking code for this receipt.
            //val carrierName : kotlin.String = carrierName_example // kotlin.String | The carrier name for this receipt.
            //val sendBcc : kotlin.Boolean = true // kotlin.Boolean | If true, the shipping notification will be sent to the seller as well
            //val noteToBuyer : kotlin.String = noteToBuyer_example // kotlin.String | Message to include in notification to the buyer.
            //val result : ShopReceipt = apiInstance.createReceiptShipment(shopId, receiptId, legacy, trackingCode, carrierName, sendBcc, noteToBuyer)
            //result shouldBe ("TODO")
        }

        // to test getShopReceipt
        should("test getShopReceipt") {
            // uncomment below to test getShopReceipt
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val receiptId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
            //val legacy : kotlin.Boolean = true // kotlin.Boolean | This parameter needed to enable new parameters and response values related to processing profiles.
            //val result : ShopReceipt = apiInstance.getShopReceipt(shopId, receiptId, legacy)
            //result shouldBe ("TODO")
        }

        // to test getShopReceipts
        should("test getShopReceipts") {
            // uncomment below to test getShopReceipts
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val minCreated : kotlin.Int = 56 // kotlin.Int | The earliest unix timestamp for when a record was created.
            //val maxCreated : kotlin.Int = 56 // kotlin.Int | The latest unix timestamp for when a record was created.
            //val minLastModified : kotlin.Int = 56 // kotlin.Int | The earliest unix timestamp for when a record last changed.
            //val maxLastModified : kotlin.Int = 56 // kotlin.Int | The latest unix timestamp for when a record last changed.
            //val limit : kotlin.Int = 56 // kotlin.Int | The maximum number of results to return.
            //val offset : kotlin.Int = 56 // kotlin.Int | The number of records to skip before selecting the first result.
            //val sortOn : kotlin.String = sortOn_example // kotlin.String | The value to sort a search result of listings on.
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | The ascending(up) or descending(down) order to sort receipts by.
            //val wasPaid : kotlin.Boolean = true // kotlin.Boolean | When `true`, returns receipts where the seller has recieved payment for the receipt. When `false`, returns receipts where payment has not been received.
            //val wasShipped : kotlin.Boolean = true // kotlin.Boolean | When `true`, returns receipts where the seller shipped the product(s) in this receipt. When `false`, returns receipts where shipment has not been set.
            //val wasDelivered : kotlin.Boolean = true // kotlin.Boolean | When `true`, returns receipts that have been marked as delivered. When `false`, returns receipts where shipment has not been marked as delivered.
            //val wasCanceled : kotlin.Boolean = true // kotlin.Boolean | When `true`, the endpoint will only return the canceled receipts. When `false`, the endpoint will only return non-canceled receipts.
            //val legacy : kotlin.Boolean = true // kotlin.Boolean | This parameter needed to enable new parameters and response values related to processing profiles.
            //val result : ShopReceipts = apiInstance.getShopReceipts(shopId, minCreated, maxCreated, minLastModified, maxLastModified, limit, offset, sortOn, sortOrder, wasPaid, wasShipped, wasDelivered, wasCanceled, legacy)
            //result shouldBe ("TODO")
        }

        // to test updateShopReceipt
        should("test updateShopReceipt") {
            // uncomment below to test updateShopReceipt
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val receiptId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
            //val legacy : kotlin.Boolean = true // kotlin.Boolean | This parameter needed to enable new parameters and response values related to processing profiles.
            //val wasShipped : kotlin.Boolean = true // kotlin.Boolean | When `true`, returns receipts where the seller shipped the product(s) in this receipt. When `false`, returns receipts where shipment has not been set.
            //val wasPaid : kotlin.Boolean = true // kotlin.Boolean | When `true`, returns receipts where the seller has recieved payment for the receipt. When `false`, returns receipts where payment has not been received.
            //val result : ShopReceipt = apiInstance.updateShopReceipt(shopId, receiptId, legacy, wasShipped, wasPaid)
            //result shouldBe ("TODO")
        }

    }
}
