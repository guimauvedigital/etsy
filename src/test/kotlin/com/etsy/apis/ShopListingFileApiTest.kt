/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.etsy.apis.ShopListingFileApi
import com.etsy.models.ErrorSchema
import com.etsy.models.ShopListingFile
import com.etsy.models.ShopListingFiles

class ShopListingFileApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ShopListingFileApi
        //val apiInstance = ShopListingFileApi()

        // to test deleteListingFile
        should("test deleteListingFile") {
            // uncomment below to test deleteListingFile
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val listingId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
            //val listingFileId : kotlin.Long = 789 // kotlin.Long | The unique numeric ID of a file associated with a digital listing.
            //apiInstance.deleteListingFile(shopId, listingId, listingFileId)
        }

        // to test getAllListingFiles
        should("test getAllListingFiles") {
            // uncomment below to test getAllListingFiles
            //val listingId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val result : ShopListingFiles = apiInstance.getAllListingFiles(listingId, shopId)
            //result shouldBe ("TODO")
        }

        // to test getListingFile
        should("test getListingFile") {
            // uncomment below to test getListingFile
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val listingId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
            //val listingFileId : kotlin.Long = 789 // kotlin.Long | The unique numeric ID of a file associated with a digital listing.
            //val result : ShopListingFile = apiInstance.getListingFile(shopId, listingId, listingFileId)
            //result shouldBe ("TODO")
        }

        // to test uploadListingFile
        should("test uploadListingFile") {
            // uncomment below to test uploadListingFile
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val listingId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
            //val listingFileId : kotlin.Long = 789 // kotlin.Long | The unique numeric ID of a file associated with a digital listing.
            //val file : io.ktor.client.request.forms.FormPart<io.ktor.client.request.forms.InputProvider> = BINARY_DATA_HERE // io.ktor.client.request.forms.FormPart<io.ktor.client.request.forms.InputProvider> | A binary file to upload.
            //val name : kotlin.String = name_example // kotlin.String | The file name string of a file to upload
            //val rank : kotlin.Long = 789 // kotlin.Long | The positive non-zero numeric position in the images displayed in a listing, with rank 1 images appearing in the left-most position in a listing.
            //val result : ShopListingFile = apiInstance.uploadListingFile(shopId, listingId, listingFileId, file, name, rank)
            //result shouldBe ("TODO")
        }

    }
}
