/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * A taxonomy node in the buyer taxonomy tree.
 *
 * @param id The unique numeric ID of an Etsy taxonomy node, which is a metadata category for listings organized into the seller taxonomy hierarchy tree. For example, the \"shoes\" taxonomy node (ID: 1429, level: 1) is higher in the hierarchy than \"girls' shoes\" (ID: 1440, level: 2). The taxonomy nodes assigned to a listing support access to specific standardized product scales and properties. For example, listings assigned the taxonomy nodes \"shoes\" or \"girls' shoes\" support access to the \"EU\" shoe size scale with its associated property names and IDs for EU shoe sizes, such as property `value_id`:\"1394\", and `name`:\"38\".
 * @param level The integer depth of this taxonomy node in the seller taxonomy tree, with roots at level 0.
 * @param name The name string for this taxonomy node.
 * @param parentId The numeric taxonomy ID of the parent of this node.
 * @param children An array of taxonomy nodes for all the direct children of this taxonomy node in the seller taxonomy tree.
 * @param fullPathTaxonomyIds An array of `taxonomy_id`s including this node and all of its direct parents in the seller taxonomy tree up to a root node. They are listed in order from root to leaf.
 */
@Serializable

data class BuyerTaxonomyNode (

    /* The unique numeric ID of an Etsy taxonomy node, which is a metadata category for listings organized into the seller taxonomy hierarchy tree. For example, the \"shoes\" taxonomy node (ID: 1429, level: 1) is higher in the hierarchy than \"girls' shoes\" (ID: 1440, level: 2). The taxonomy nodes assigned to a listing support access to specific standardized product scales and properties. For example, listings assigned the taxonomy nodes \"shoes\" or \"girls' shoes\" support access to the \"EU\" shoe size scale with its associated property names and IDs for EU shoe sizes, such as property `value_id`:\"1394\", and `name`:\"38\". */
    @SerialName(value = "id") val id: kotlin.Long? = null,

    /* The integer depth of this taxonomy node in the seller taxonomy tree, with roots at level 0. */
    @SerialName(value = "level") val level: kotlin.Int? = null,

    /* The name string for this taxonomy node. */
    @SerialName(value = "name") val name: kotlin.String? = null,

    /* The numeric taxonomy ID of the parent of this node. */
    @SerialName(value = "parent_id") val parentId: kotlin.Long? = null,

    /* An array of taxonomy nodes for all the direct children of this taxonomy node in the seller taxonomy tree. */
    @SerialName(value = "children") val children: kotlin.collections.List<BuyerTaxonomyNode>? = null,

    /* An array of `taxonomy_id`s including this node and all of its direct parents in the seller taxonomy tree up to a root node. They are listed in order from root to leaf. */
    @SerialName(value = "full_path_taxonomy_ids") val fullPathTaxonomyIds: kotlin.collections.List<kotlin.Long>? = null

) {


}

