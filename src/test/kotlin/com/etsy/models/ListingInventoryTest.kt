/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.etsy.models.ListingInventory
import com.etsy.models.ListingInventoryProduct

class ListingInventoryTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ListingInventory
        //val modelInstance = ListingInventory()

        // to test the property `products` - A JSON array of products available in a listing, even if only one product. All field names in the JSON blobs are lowercase.
        should("test products") {
            // uncomment below to test the property
            //modelInstance.products shouldBe ("TODO")
        }

        // to test the property `priceOnProperty` - An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change product prices, if any. For example, if you charge specific prices for different sized products in the same listing, then this array contains the property ID for size.
        should("test priceOnProperty") {
            // uncomment below to test the property
            //modelInstance.priceOnProperty shouldBe ("TODO")
        }

        // to test the property `quantityOnProperty` - An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change the quantity of the products, if any. For example, if you stock specific quantities of different colored products in the same listing, then this array contains the property ID for color.
        should("test quantityOnProperty") {
            // uncomment below to test the property
            //modelInstance.quantityOnProperty shouldBe ("TODO")
        }

        // to test the property `skuOnProperty` - An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change the product SKU, if any. For example, if you use specific skus for different colored products in the same listing, then this array contains the property ID for color.
        should("test skuOnProperty") {
            // uncomment below to test the property
            //modelInstance.skuOnProperty shouldBe ("TODO")
        }

        // to test the property `readinessStateOnProperty` - An array of unique [listing property](/documentation/reference#operation/getListingProperties) ID integers for the properties that change processing profile, if any. For example, if you need specific processing profiles for different colored products in the same listing, then this array contains the property ID for color.
        should("test readinessStateOnProperty") {
            // uncomment below to test the property
            //modelInstance.readinessStateOnProperty shouldBe ("TODO")
        }

    }
}
