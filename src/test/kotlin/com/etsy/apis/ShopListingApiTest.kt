/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.etsy.apis.ShopListingApi
import com.etsy.models.ErrorSchema
import com.etsy.models.ListingPropertyValue
import com.etsy.models.ListingPropertyValues
import com.etsy.models.ShopListing
import com.etsy.models.ShopListingWithAssociations
import com.etsy.models.ShopListings
import com.etsy.models.ShopListingsWithAssociations

class ShopListingApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ShopListingApi
        //val apiInstance = ShopListingApi()

        // to test createDraftListing
        should("test createDraftListing") {
            // uncomment below to test createDraftListing
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val quantity : kotlin.Int = 56 // kotlin.Int | The positive non-zero number of products available for purchase in the listing. Note: The listing quantity is the sum of available offering quantities. You can request the quantities for individual offerings from the ListingInventory resource using the [getListingInventory](/documentation/reference#operation/getListingInventory) endpoint.
            //val title : kotlin.String = title_example // kotlin.String | The listing's title string. When creating or updating a listing, valid title strings contain only letters, numbers, punctuation marks, mathematical symbols, whitespace characters, ™, ©, and ®. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{P}\\\\p{Sm}\\\\p{Zs}™©®]/u) You can only use the %, :, & and + characters once each.
            //val description : kotlin.String = description_example // kotlin.String | A description string of the product for sale in the listing.
            //val price : kotlin.Float = 3.4 // kotlin.Float | The positive non-zero price of the product. (Sold product listings are private) Note: The price is the minimum possible price. The [`getListingInventory`](/documentation/reference/#operation/getListingInventory) method requests exact prices for available offerings.
            //val whoMade : kotlin.String = whoMade_example // kotlin.String | An enumerated string indicating who made the product. Helps buyers locate the listing under the Handmade heading. Requires 'is_supply' and 'when_made'.
            //val whenMade : kotlin.String = whenMade_example // kotlin.String | An enumerated string for the era in which the maker made the product in this listing. Helps buyers locate the listing under the Vintage heading. Requires 'is_supply' and 'who_made'.
            //val taxonomyId : kotlin.Long = 789 // kotlin.Long | The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy) and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more information.
            //val legacy : kotlin.Boolean = true // kotlin.Boolean | This parameter needed to enable new parameters and response values related to processing profiles.
            //val shippingProfileId : kotlin.Long = 789 // kotlin.Long | The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile) associated with the listing. Required when listing type is `physical`.
            //val returnPolicyId : kotlin.Long = 789 // kotlin.Long | The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
            //val materials : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | A list of material strings for materials used in the product. Valid materials strings contain only letters, numbers, and whitespace characters. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{Zs}]/u) Default value is null.
            //val shopSectionId : kotlin.Long = 789 // kotlin.Long | The numeric ID of the [shop section](/documentation/reference#tag/Shop-Section) for this listing. Default value is null.
            //val processingMin : kotlin.Int = 56 // kotlin.Int | The minimum number of days required to process this listing. Default value is null.
            //val processingMax : kotlin.Int = 56 // kotlin.Int | The maximum number of days required to process this listing. Default value is null.
            //val readinessStateId : kotlin.Long = 789 // kotlin.Long | The numeric ID of the [processing profile](/documentation/reference#operation/getShopReadinessStateDefinition) associated with the listing. Required when listing type is `physical`.
            //val tags : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | A comma-separated list of tag strings for the listing. When creating or updating a listing, valid tag strings contain only letters, numbers, whitespace characters, -, ', ™, ©, and ®. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{Zs}\\\\-'™©®]/u) Default value is null.
            //val styles : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | An array of style strings for this listing, each of which is free-form text string such as \\\"Formal\\\", or \\\"Steampunk\\\". When creating or updating a listing, the listing may have up to two styles. Valid style strings contain only letters, numbers, and whitespace characters. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{Zs}]/u) Default value is null.
            //val itemWeight : kotlin.Float = 3.4 // kotlin.Float | The numeric weight of the product measured in units set in 'item_weight_unit'. Default value is null. If set, the value must be greater than 0.
            //val itemLength : kotlin.Float = 3.4 // kotlin.Float | The numeric length of the product measured in units set in 'item_dimensions_unit'. Default value is null. If set, the value must be greater than 0.
            //val itemWidth : kotlin.Float = 3.4 // kotlin.Float | The numeric width of the product measured in units set in 'item_dimensions_unit'. Default value is null. If set, the value must be greater than 0.
            //val itemHeight : kotlin.Float = 3.4 // kotlin.Float | The numeric height of the product measured in units set in 'item_dimensions_unit'. Default value is null. If set, the value must be greater than 0.
            //val itemWeightUnit : kotlin.String = itemWeightUnit_example // kotlin.String | A string defining the units used to measure the weight of the product. Default value is null.
            //val itemDimensionsUnit : kotlin.String = itemDimensionsUnit_example // kotlin.String | A string defining the units used to measure the dimensions of the product. Default value is null.
            //val isPersonalizable : kotlin.Boolean = true // kotlin.Boolean | When true, this listing is personalizable. The default value is null.
            //val personalizationIsRequired : kotlin.Boolean = true // kotlin.Boolean | When true, this listing requires personalization. The default value is null. Will only change if is_personalizable is 'true'.
            //val personalizationCharCountMax : kotlin.Int = 56 // kotlin.Int | This is an integer value representing the maximum length for the personalization message entered by the buyer. Will only change if is_personalizable is 'true'.
            //val personalizationInstructions : kotlin.String = personalizationInstructions_example // kotlin.String | A string representing instructions for the buyer to enter the personalization. Will only change if is_personalizable is 'true'.
            //val productionPartnerIds : kotlin.collections.List<kotlin.Long> =  // kotlin.collections.List<kotlin.Long> | An array of unique IDs of production partner ids.
            //val imageIds : kotlin.collections.List<kotlin.Long> =  // kotlin.collections.List<kotlin.Long> | An array of numeric image IDs of the images in a listing, which can include up to 10 images.
            //val isSupply : kotlin.Boolean = true // kotlin.Boolean | When true, tags the listing as a supply product, else indicates that it's a finished product. Helps buyers locate the listing under the Supplies heading. Requires 'who_made' and 'when_made'.
            //val isCustomizable : kotlin.Boolean = true // kotlin.Boolean | When true, a buyer may contact the seller for a customized order. The default value is true when a shop accepts custom orders. Does not apply to shops that do not accept custom orders.
            //val shouldAutoRenew : kotlin.Boolean = true // kotlin.Boolean | When true, renews a listing for four months upon expiration.
            //val isTaxable : kotlin.Boolean = true // kotlin.Boolean | When true, applicable [shop](/documentation/reference#tag/Shop) tax rates apply to this listing at checkout.
            //val type : kotlin.String = type_example // kotlin.String | An enumerated type string that indicates whether the listing is physical or a digital download.
            //val result : ShopListing = apiInstance.createDraftListing(shopId, quantity, title, description, price, whoMade, whenMade, taxonomyId, legacy, shippingProfileId, returnPolicyId, materials, shopSectionId, processingMin, processingMax, readinessStateId, tags, styles, itemWeight, itemLength, itemWidth, itemHeight, itemWeightUnit, itemDimensionsUnit, isPersonalizable, personalizationIsRequired, personalizationCharCountMax, personalizationInstructions, productionPartnerIds, imageIds, isSupply, isCustomizable, shouldAutoRenew, isTaxable, type)
            //result shouldBe ("TODO")
        }

        // to test deleteListing
        should("test deleteListing") {
            // uncomment below to test deleteListing
            //val listingId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
            //apiInstance.deleteListing(listingId)
        }

        // to test deleteListingProperty
        should("test deleteListingProperty") {
            // uncomment below to test deleteListingProperty
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val listingId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
            //val propertyId : kotlin.Long = 789 // kotlin.Long | The unique ID of an Etsy [listing property](/documentation/reference#operation/getListingProperties).
            //apiInstance.deleteListingProperty(shopId, listingId, propertyId)
        }

        // to test findAllActiveListingsByShop
        should("test findAllActiveListingsByShop") {
            // uncomment below to test findAllActiveListingsByShop
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val limit : kotlin.Int = 56 // kotlin.Int | The maximum number of results to return.
            //val sortOn : kotlin.String = sortOn_example // kotlin.String | The value to sort a search result of listings on. NOTES: a) `sort_on` only works when combined with one of the search options (keywords, region, etc.). b) when using `score` the returned results will always be in _descending_ order, regardless of the `sort_order` parameter.
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | The ascending(up) or descending(down) order to sort listings by. NOTE: sort_order only works when combined with one of the search options (keywords, region, etc.).
            //val offset : kotlin.Int = 56 // kotlin.Int | The number of records to skip before selecting the first result.
            //val keywords : kotlin.String = keywords_example // kotlin.String | Search term or phrase that must appear in all results.
            //val legacy : kotlin.Boolean = true // kotlin.Boolean | This parameter needed to enable new parameters and response values related to processing profiles.
            //val result : ShopListings = apiInstance.findAllActiveListingsByShop(shopId, limit, sortOn, sortOrder, offset, keywords, legacy)
            //result shouldBe ("TODO")
        }

        // to test findAllListingsActive
        should("test findAllListingsActive") {
            // uncomment below to test findAllListingsActive
            //val limit : kotlin.Int = 56 // kotlin.Int | The maximum number of results to return.
            //val offset : kotlin.Int = 56 // kotlin.Int | The number of records to skip before selecting the first result.
            //val keywords : kotlin.String = keywords_example // kotlin.String | Search term or phrase that must appear in all results.
            //val sortOn : kotlin.String = sortOn_example // kotlin.String | The value to sort a search result of listings on. NOTES: a) `sort_on` only works when combined with one of the search options (keywords, region, etc.). b) when using `score` the returned results will always be in _descending_ order, regardless of the `sort_order` parameter.
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | The ascending(up) or descending(down) order to sort listings by. NOTE: sort_order only works when combined with one of the search options (keywords, region, etc.).
            //val minPrice : kotlin.Float = 3.4 // kotlin.Float | The minimum price of listings to be returned by a search result.
            //val maxPrice : kotlin.Float = 3.4 // kotlin.Float | The maximum price of listings to be returned by a search result.
            //val taxonomyId : kotlin.Long = 789 // kotlin.Long | The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy) and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more information.
            //val shopLocation : kotlin.String = shopLocation_example // kotlin.String | Filters by shop location. If location cannot be parsed, Etsy responds with an error.
            //val legacy : kotlin.Boolean = true // kotlin.Boolean | This parameter needed to enable new parameters and response values related to processing profiles.
            //val result : ShopListings = apiInstance.findAllListingsActive(limit, offset, keywords, sortOn, sortOrder, minPrice, maxPrice, taxonomyId, shopLocation, legacy)
            //result shouldBe ("TODO")
        }

        // to test getFeaturedListingsByShop
        should("test getFeaturedListingsByShop") {
            // uncomment below to test getFeaturedListingsByShop
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val limit : kotlin.Int = 56 // kotlin.Int | The maximum number of results to return.
            //val offset : kotlin.Int = 56 // kotlin.Int | The number of records to skip before selecting the first result.
            //val result : ShopListings = apiInstance.getFeaturedListingsByShop(shopId, limit, offset)
            //result shouldBe ("TODO")
        }

        // to test getListing
        should("test getListing") {
            // uncomment below to test getListing
            //val listingId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
            //val includes : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | An enumerated string that attaches a valid association. Acceptable inputs are 'Shipping', 'Shop', 'Images', 'User', 'Translations' and 'Inventory'.
            //val language : kotlin.String = language_example // kotlin.String | The IETF language tag for the language of this translation. Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`.
            //val legacy : kotlin.Boolean = true // kotlin.Boolean | This parameter needed to enable new parameters and response values related to processing profiles.
            //val result : ShopListingWithAssociations = apiInstance.getListing(listingId, includes, language, legacy)
            //result shouldBe ("TODO")
        }

        // to test getListingProperties
        should("test getListingProperties") {
            // uncomment below to test getListingProperties
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val listingId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
            //val result : ListingPropertyValues = apiInstance.getListingProperties(shopId, listingId)
            //result shouldBe ("TODO")
        }

        // to test getListingProperty
        should("test getListingProperty") {
            // uncomment below to test getListingProperty
            //val listingId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
            //val propertyId : kotlin.Long = 789 // kotlin.Long | The unique ID of an Etsy [listing property](/documentation/reference#operation/getListingProperties).
            //val result : ListingPropertyValue = apiInstance.getListingProperty(listingId, propertyId)
            //result shouldBe ("TODO")
        }

        // to test getListingsByListingIds
        should("test getListingsByListingIds") {
            // uncomment below to test getListingsByListingIds
            //val listingIds : kotlin.collections.List<kotlin.Long> =  // kotlin.collections.List<kotlin.Long> | The list of numeric IDS for the listings in a specific Etsy shop.
            //val includes : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | An enumerated string that attaches a valid association. Acceptable inputs are 'Shipping', 'Shop', 'Images', 'User', 'Translations' and 'Inventory'.
            //val result : ShopListingsWithAssociations = apiInstance.getListingsByListingIds(listingIds, includes)
            //result shouldBe ("TODO")
        }

        // to test getListingsByShop
        should("test getListingsByShop") {
            // uncomment below to test getListingsByShop
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val state : kotlin.String = state_example // kotlin.String | When _updating_ a listing, this value can be either `active` or `inactive`. Note: Setting a `draft` listing to `active` will also publish the listing on etsy.com and requires that the listing have an image set. Setting a `sold_out` listing to active will update the quantity to 1 and renew the listing on etsy.com.
            //val limit : kotlin.Int = 56 // kotlin.Int | The maximum number of results to return.
            //val offset : kotlin.Int = 56 // kotlin.Int | The number of records to skip before selecting the first result.
            //val sortOn : kotlin.String = sortOn_example // kotlin.String | The value to sort a search result of listings on. NOTES: a) `sort_on` only works when combined with one of the search options (keywords, region, etc.). b) when using `score` the returned results will always be in _descending_ order, regardless of the `sort_order` parameter.
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | The ascending(up) or descending(down) order to sort listings by. NOTE: sort_order only works when combined with one of the search options (keywords, region, etc.).
            //val includes : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | An enumerated string that attaches a valid association. Acceptable inputs are 'Shipping', 'Shop', 'Images', 'User', 'Translations' and 'Inventory'.
            //val legacy : kotlin.Boolean = true // kotlin.Boolean | This parameter needed to enable new parameters and response values related to processing profiles.
            //val result : ShopListingsWithAssociations = apiInstance.getListingsByShop(shopId, state, limit, offset, sortOn, sortOrder, includes, legacy)
            //result shouldBe ("TODO")
        }

        // to test getListingsByShopReceipt
        should("test getListingsByShopReceipt") {
            // uncomment below to test getListingsByShopReceipt
            //val receiptId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val limit : kotlin.Int = 56 // kotlin.Int | The maximum number of results to return.
            //val offset : kotlin.Int = 56 // kotlin.Int | The number of records to skip before selecting the first result.
            //val result : ShopListings = apiInstance.getListingsByShopReceipt(receiptId, shopId, limit, offset)
            //result shouldBe ("TODO")
        }

        // to test getListingsByShopReturnPolicy
        should("test getListingsByShopReturnPolicy") {
            // uncomment below to test getListingsByShopReturnPolicy
            //val returnPolicyId : kotlin.Long = 789 // kotlin.Long | The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val result : ShopListings = apiInstance.getListingsByShopReturnPolicy(returnPolicyId, shopId)
            //result shouldBe ("TODO")
        }

        // to test getListingsByShopSectionId
        should("test getListingsByShopSectionId") {
            // uncomment below to test getListingsByShopSectionId
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val shopSectionIds : kotlin.collections.List<kotlin.Long> =  // kotlin.collections.List<kotlin.Long> | A list of numeric IDS for all sections in a specific Etsy shop.
            //val limit : kotlin.Int = 56 // kotlin.Int | The maximum number of results to return.
            //val offset : kotlin.Int = 56 // kotlin.Int | The number of records to skip before selecting the first result.
            //val sortOn : kotlin.String = sortOn_example // kotlin.String | The value to sort a search result of listings on. NOTES: a) `sort_on` only works when combined with one of the search options (keywords, region, etc.). b) when using `score` the returned results will always be in _descending_ order, regardless of the `sort_order` parameter.
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | The ascending(up) or descending(down) order to sort listings by. NOTE: sort_order only works when combined with one of the search options (keywords, region, etc.).
            //val result : ShopListings = apiInstance.getListingsByShopSectionId(shopId, shopSectionIds, limit, offset, sortOn, sortOrder)
            //result shouldBe ("TODO")
        }

        // to test updateListing
        should("test updateListing") {
            // uncomment below to test updateListing
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val listingId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
            //val legacy : kotlin.Boolean = true // kotlin.Boolean | This parameter needed to enable new parameters and response values related to processing profiles.
            //val imageIds : kotlin.collections.List<kotlin.Long> =  // kotlin.collections.List<kotlin.Long> | An array of numeric image IDs of the images in a listing, which can include up to 10 images.
            //val title : kotlin.String = title_example // kotlin.String | The listing's title string. When creating or updating a listing, valid title strings contain only letters, numbers, punctuation marks, mathematical symbols, whitespace characters, ™, ©, and ®. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{P}\\\\p{Sm}\\\\p{Zs}™©®]/u) You can only use the %, :, & and + characters once each.
            //val description : kotlin.String = description_example // kotlin.String | A description string of the product for sale in the listing.
            //val materials : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | A list of material strings for materials used in the product. Valid materials strings contain only letters, numbers, and whitespace characters. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{Zs}]/u) Default value is null.
            //val shouldAutoRenew : kotlin.Boolean = true // kotlin.Boolean | When true, renews a listing for four months upon expiration.
            //val shippingProfileId : kotlin.Long = 789 // kotlin.Long | The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile) associated with the listing. Required when listing type is `physical`.
            //val returnPolicyId : kotlin.Long = 789 // kotlin.Long | The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies). Required for active physical listings. This requirement does not apply to listings of EU-based shops.
            //val shopSectionId : kotlin.Int = 56 // kotlin.Int | The numeric ID of the [shop section](/documentation/reference#tag/Shop-Section) for this listing. Default value is null.
            //val itemWeight : kotlin.Float = 3.4 // kotlin.Float | The numeric weight of the product measured in units set in 'item_weight_unit'. Default value is null. If set, the value must be greater than 0.
            //val itemLength : kotlin.Float = 3.4 // kotlin.Float | The numeric length of the product measured in units set in 'item_dimensions_unit'. Default value is null. If set, the value must be greater than 0.
            //val itemWidth : kotlin.Float = 3.4 // kotlin.Float | The numeric width of the product measured in units set in 'item_dimensions_unit'. Default value is null. If set, the value must be greater than 0.
            //val itemHeight : kotlin.Float = 3.4 // kotlin.Float | The numeric height of the product measured in units set in 'item_dimensions_unit'. Default value is null. If set, the value must be greater than 0.
            //val itemWeightUnit : kotlin.String = itemWeightUnit_example // kotlin.String | A string defining the units used to measure the weight of the product. Default value is null.
            //val itemDimensionsUnit : kotlin.String = itemDimensionsUnit_example // kotlin.String | A string defining the units used to measure the dimensions of the product. Default value is null.
            //val isTaxable : kotlin.Boolean = true // kotlin.Boolean | When true, applicable [shop](/documentation/reference#tag/Shop) tax rates apply to this listing at checkout.
            //val taxonomyId : kotlin.Long = 789 // kotlin.Long | The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy) and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more information.
            //val tags : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | A comma-separated list of tag strings for the listing. When creating or updating a listing, valid tag strings contain only letters, numbers, whitespace characters, -, ', ™, ©, and ®. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{Zs}\\\\-'™©®]/u) Default value is null.
            //val whoMade : kotlin.String = whoMade_example // kotlin.String | An enumerated string indicating who made the product. Helps buyers locate the listing under the Handmade heading. Requires 'is_supply' and 'when_made'.
            //val whenMade : kotlin.String = whenMade_example // kotlin.String | An enumerated string for the era in which the maker made the product in this listing. Helps buyers locate the listing under the Vintage heading. Requires 'is_supply' and 'who_made'.
            //val featuredRank : kotlin.Int = 56 // kotlin.Int | The positive non-zero numeric position in the featured listings of the shop, with rank 1 listings appearing in the left-most position in featured listing on a shop's home page.
            //val isPersonalizable : kotlin.Boolean = true // kotlin.Boolean | When true, this listing is personalizable. The default value is null.
            //val personalizationIsRequired : kotlin.Boolean = true // kotlin.Boolean | When true, this listing requires personalization. The default value is null. Will only change if is_personalizable is 'true'.
            //val personalizationCharCountMax : kotlin.Int = 56 // kotlin.Int | This is an integer value representing the maximum length for the personalization message entered by the buyer. Will only change if is_personalizable is 'true'.
            //val personalizationInstructions : kotlin.String = personalizationInstructions_example // kotlin.String | A string representing instructions for the buyer to enter the personalization. Will only change if is_personalizable is 'true'.
            //val state : kotlin.String = state_example // kotlin.String | When _updating_ a listing, this value can be either `active` or `inactive`. Note: Setting a `draft` listing to `active` will also publish the listing on etsy.com and requires that the listing have an image set. Setting a `sold_out` listing to active will update the quantity to 1 and renew the listing on etsy.com.
            //val isSupply : kotlin.Boolean = true // kotlin.Boolean | When true, tags the listing as a supply product, else indicates that it's a finished product. Helps buyers locate the listing under the Supplies heading. Requires 'who_made' and 'when_made'.
            //val productionPartnerIds : kotlin.collections.List<kotlin.Long> =  // kotlin.collections.List<kotlin.Long> | An array of unique IDs of production partner ids.
            //val type : kotlin.String = type_example // kotlin.String | An enumerated type string that indicates whether the listing is physical or a digital download.
            //val result : ShopListing = apiInstance.updateListing(shopId, listingId, legacy, imageIds, title, description, materials, shouldAutoRenew, shippingProfileId, returnPolicyId, shopSectionId, itemWeight, itemLength, itemWidth, itemHeight, itemWeightUnit, itemDimensionsUnit, isTaxable, taxonomyId, tags, whoMade, whenMade, featuredRank, isPersonalizable, personalizationIsRequired, personalizationCharCountMax, personalizationInstructions, state, isSupply, productionPartnerIds, type)
            //result shouldBe ("TODO")
        }

        // to test updateListingProperty
        should("test updateListingProperty") {
            // uncomment below to test updateListingProperty
            //val shopId : kotlin.Long = 789 // kotlin.Long | The unique positive non-zero numeric ID for an Etsy Shop.
            //val listingId : kotlin.Long = 789 // kotlin.Long | The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
            //val propertyId : kotlin.Long = 789 // kotlin.Long | The unique ID of an Etsy [listing property](/documentation/reference#operation/getListingProperties).
            //val valueIds : kotlin.collections.List<kotlin.Long> =  // kotlin.collections.List<kotlin.Long> | An array of unique IDs of multiple Etsy [listing property](/documentation/reference#operation/getListingProperties) values. For example, if your listing offers different sizes of a product, then the value ID list contains value IDs for each size.
            //val values : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | An array of value strings for multiple Etsy [listing property](/documentation/reference#operation/getListingProperties) values. For example, if your listing offers different colored products, then the values array contains the color strings for each color. Note: parenthesis characters (`(` and `)`) are not allowed.
            //val scaleId : kotlin.Long = 789 // kotlin.Long | The numeric ID of a single Etsy.com measurement scale. For example, for shoe size, there are three `scale_id`s available - `UK`, `US/Canada`, and `EU`, where `US/Canada` has `scale_id` 19.
            //val result : ListingPropertyValue = apiInstance.updateListingProperty(shopId, listingId, propertyId, valueIds, values, scaleId)
            //result shouldBe ("TODO")
        }

    }
}
