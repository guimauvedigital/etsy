/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.apis

import com.etsy.models.ErrorSchema
import com.etsy.models.ShopReceipt
import com.etsy.models.ShopReceipts

import com.etsy.infrastructure.*
import io.ktor.client.HttpClient
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

open class ShopReceiptApi : ApiClient {

    constructor(
        baseUrl: String = ApiClient.BASE_URL,
        httpClientEngine: HttpClientEngine? = null,
        httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
        jsonSerializer: Json = ApiClient.JSON_DEFAULT
    ) : super(baseUrl = baseUrl, httpClientEngine = httpClientEngine, httpClientConfig = httpClientConfig, jsonBlock = jsonSerializer)

    constructor(
        baseUrl: String,
        httpClient: HttpClient
    ): super(baseUrl = baseUrl, httpClient = httpClient)

    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Submits tracking information for a Shop Receipt, which creates a Shop Receipt Shipment entry for the given receipt_id. Each time you successfully submit tracking info, Etsy sends a notification email to the buyer User. When send_bcc is true, Etsy sends shipping notifications to the seller as well. When tracking_code and carrier_name aren&#39;t sent, the receipt is marked as shipped only. If the carrier is not supported, you may use &#x60;other&#x60; as the carrier name so you can provide the tracking code. **NOTES** When shipping within the United States AND the order is over $10 _or_ when shipping to India, tracking code and carrier name ARE required. Access to ShopReceipt&#39;s first_line, second_line, city, state, zip, country_iso and formatted_address is contingent in some regions to a preferred partnership status with Etsy
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @param receiptId The receipt to submit tracking for.
     * @param legacy This parameter needed to enable new parameters and response values related to processing profiles. (optional)
     * @param trackingCode The tracking code for this receipt. (optional)
     * @param carrierName The carrier name for this receipt. (optional)
     * @param sendBcc If true, the shipping notification will be sent to the seller as well (optional)
     * @param noteToBuyer Message to include in notification to the buyer. (optional)
     * @return ShopReceipt
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun createReceiptShipment(shopId: kotlin.Long, receiptId: kotlin.Long, legacy: kotlin.Boolean? = null, trackingCode: kotlin.String? = null, carrierName: kotlin.String? = null, sendBcc: kotlin.Boolean? = null, noteToBuyer: kotlin.String? = null): HttpResponse<ShopReceipt> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            ParametersBuilder().also {
                trackingCode?.apply { it.append("tracking_code", trackingCode.toString()) }
                carrierName?.apply { it.append("carrier_name", carrierName.toString()) }
                sendBcc?.apply { it.append("send_bcc", sendBcc.toString()) }
                noteToBuyer?.apply { it.append("note_to_buyer", noteToBuyer.toString()) }
            }.build()

        val localVariableQuery = mutableMapOf<String, List<String>>()
        legacy?.apply { localVariableQuery["legacy"] = listOf("$legacy") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/v3/application/shops/{shop_id}/receipts/{receipt_id}/tracking".replace("{" + "shop_id" + "}", "$shopId").replace("{" + "receipt_id" + "}", "$receiptId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return urlEncodedFormRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Retrieves a receipt, identified by a receipt id, from an Etsy shop. **NOTE** Access to ShopReceipt&#39;s first_line, second_line, city, state, zip, country_iso and formatted_address is contingent in some regions to a preferred partnership status with Etsy
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @param receiptId The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
     * @param legacy This parameter needed to enable new parameters and response values related to processing profiles. (optional)
     * @return ShopReceipt
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getShopReceipt(shopId: kotlin.Long, receiptId: kotlin.Long, legacy: kotlin.Boolean? = null): HttpResponse<ShopReceipt> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        legacy?.apply { localVariableQuery["legacy"] = listOf("$legacy") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/v3/application/shops/{shop_id}/receipts/{receipt_id}".replace("{" + "shop_id" + "}", "$shopId").replace("{" + "receipt_id" + "}", "$receiptId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }



    /**
     * enum for parameter sortOn
     */
    @Serializable
    enum class SortOnGetShopReceipts(val value: kotlin.String) {
        
        @SerialName(value = "created")
        created("created"),
        
        @SerialName(value = "updated")
        updated("updated"),
        
        @SerialName(value = "receipt_id")
        receipt_id("receipt_id")
        
    }


    /**
     * enum for parameter sortOrder
     */
    @Serializable
    enum class SortOrderGetShopReceipts(val value: kotlin.String) {
        
        @SerialName(value = "asc")
        asc("asc"),
        
        @SerialName(value = "ascending")
        ascending("ascending"),
        
        @SerialName(value = "desc")
        desc("desc"),
        
        @SerialName(value = "descending")
        descending("descending"),
        
        @SerialName(value = "up")
        up("up"),
        
        @SerialName(value = "down")
        down("down")
        
    }

    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Requests the Shop Receipts from a specific Shop, unfiltered or filtered by receipt id range or offset, date, paid, and/or shipped purchases. **NOTE** Access to ShopReceipt&#39;s first_line, second_line, city, state, zip, country_iso and formatted_address is contingent in some regions to a preferred partnership status with Etsy
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @param minCreated The earliest unix timestamp for when a record was created. (optional)
     * @param maxCreated The latest unix timestamp for when a record was created. (optional)
     * @param minLastModified The earliest unix timestamp for when a record last changed. (optional)
     * @param maxLastModified The latest unix timestamp for when a record last changed. (optional)
     * @param limit The maximum number of results to return. (optional, default to 25)
     * @param offset The number of records to skip before selecting the first result. (optional, default to 0)
     * @param sortOn The value to sort a search result of listings on. (optional, default to created)
     * @param sortOrder The ascending(up) or descending(down) order to sort receipts by. (optional, default to desc)
     * @param wasPaid When &#x60;true&#x60;, returns receipts where the seller has recieved payment for the receipt. When &#x60;false&#x60;, returns receipts where payment has not been received. (optional)
     * @param wasShipped When &#x60;true&#x60;, returns receipts where the seller shipped the product(s) in this receipt. When &#x60;false&#x60;, returns receipts where shipment has not been set. (optional)
     * @param wasDelivered When &#x60;true&#x60;, returns receipts that have been marked as delivered. When &#x60;false&#x60;, returns receipts where shipment has not been marked as delivered. (optional)
     * @param wasCanceled When &#x60;true&#x60;, the endpoint will only return the canceled receipts. When &#x60;false&#x60;, the endpoint will only return non-canceled receipts. (optional)
     * @param legacy This parameter needed to enable new parameters and response values related to processing profiles. (optional)
     * @return ShopReceipts
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getShopReceipts(shopId: kotlin.Long, minCreated: kotlin.Int? = null, maxCreated: kotlin.Int? = null, minLastModified: kotlin.Int? = null, maxLastModified: kotlin.Int? = null, limit: kotlin.Int? = 25, offset: kotlin.Int? = 0, sortOn: SortOnGetShopReceipts? = SortOnGetShopReceipts.created, sortOrder: SortOrderGetShopReceipts? = SortOrderGetShopReceipts.desc, wasPaid: kotlin.Boolean? = null, wasShipped: kotlin.Boolean? = null, wasDelivered: kotlin.Boolean? = null, wasCanceled: kotlin.Boolean? = null, legacy: kotlin.Boolean? = null): HttpResponse<ShopReceipts> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        minCreated?.apply { localVariableQuery["min_created"] = listOf("$minCreated") }
        maxCreated?.apply { localVariableQuery["max_created"] = listOf("$maxCreated") }
        minLastModified?.apply { localVariableQuery["min_last_modified"] = listOf("$minLastModified") }
        maxLastModified?.apply { localVariableQuery["max_last_modified"] = listOf("$maxLastModified") }
        limit?.apply { localVariableQuery["limit"] = listOf("$limit") }
        offset?.apply { localVariableQuery["offset"] = listOf("$offset") }
        sortOn?.apply { localVariableQuery["sort_on"] = listOf("${ sortOn.value }") }
        sortOrder?.apply { localVariableQuery["sort_order"] = listOf("${ sortOrder.value }") }
        wasPaid?.apply { localVariableQuery["was_paid"] = listOf("$wasPaid") }
        wasShipped?.apply { localVariableQuery["was_shipped"] = listOf("$wasShipped") }
        wasDelivered?.apply { localVariableQuery["was_delivered"] = listOf("$wasDelivered") }
        wasCanceled?.apply { localVariableQuery["was_canceled"] = listOf("$wasCanceled") }
        legacy?.apply { localVariableQuery["legacy"] = listOf("$legacy") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/v3/application/shops/{shop_id}/receipts".replace("{" + "shop_id" + "}", "$shopId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Updates the status of a receipt, identified by a receipt id, from an Etsy shop. **NOTE** Access to ShopReceipt&#39;s first_line, second_line, city, state, zip, country_iso and formatted_address is contingent in some regions to a preferred partnership status with Etsy
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @param receiptId The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
     * @param legacy This parameter needed to enable new parameters and response values related to processing profiles. (optional)
     * @param wasShipped When &#x60;true&#x60;, returns receipts where the seller shipped the product(s) in this receipt. When &#x60;false&#x60;, returns receipts where shipment has not been set. (optional)
     * @param wasPaid When &#x60;true&#x60;, returns receipts where the seller has recieved payment for the receipt. When &#x60;false&#x60;, returns receipts where payment has not been received. (optional)
     * @return ShopReceipt
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun updateShopReceipt(shopId: kotlin.Long, receiptId: kotlin.Long, legacy: kotlin.Boolean? = null, wasShipped: kotlin.Boolean? = null, wasPaid: kotlin.Boolean? = null): HttpResponse<ShopReceipt> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            ParametersBuilder().also {
                wasShipped?.apply { it.append("was_shipped", wasShipped.toString()) }
                wasPaid?.apply { it.append("was_paid", wasPaid.toString()) }
            }.build()

        val localVariableQuery = mutableMapOf<String, List<String>>()
        legacy?.apply { localVariableQuery["legacy"] = listOf("$legacy") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.PUT,
            "/v3/application/shops/{shop_id}/receipts/{receipt_id}".replace("{" + "shop_id" + "}", "$shopId").replace("{" + "receipt_id" + "}", "$receiptId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return urlEncodedFormRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


}
