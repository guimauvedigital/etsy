/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.models

import com.etsy.models.ListingPropertyValue
import com.etsy.models.Money
import com.etsy.models.TransactionVariations

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * A transaction object associated with a shop receipt. Etsy generates one transaction per listing purchased as recorded on the order receipt.
 *
 * @param transactionId The unique numeric ID for a transaction.
 * @param title The title string of the [listing](/documentation/reference#tag/ShopListing) purchased in this transaction.
 * @param description The description string of the [listing](/documentation/reference#tag/ShopListing) purchased in this transaction.
 * @param sellerUserId The numeric user ID for the seller in this transaction.
 * @param buyerUserId The numeric user ID for the buyer in this transaction.
 * @param createTimestamp The transaction's creation date and time, in epoch seconds.
 * @param createdTimestamp The transaction's creation date and time, in epoch seconds.
 * @param paidTimestamp The transaction's paid date and time, in epoch seconds.
 * @param shippedTimestamp The transaction's shipping date and time, in epoch seconds.
 * @param quantity The numeric quantity of products purchased in this transaction.
 * @param listingImageId The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.
 * @param receiptId The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
 * @param isDigital When true, the transaction recorded the purchase of a digital listing.
 * @param fileData A string describing the files purchased in this transaction.
 * @param listingId The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
 * @param transactionType The type string for the transaction, usually \"listing\".
 * @param productId The numeric ID for a specific [product](/documentation/reference#tag/ShopListing-Product) purchased from a listing.
 * @param sku The SKU string for the product
 * @param price A money object representing the price recorded the transaction.
 * @param shippingCost A money object representing the shipping cost for this transaction.
 * @param variations Array of variations and personalizations the buyer chose.
 * @param productData A list of property value entries for this product. Note: parenthesis characters (`(` and `)`) are not allowed.
 * @param shippingProfileId The ID of the shipping profile selected for this listing.
 * @param minProcessingDays The minimum number of days for processing the listing.
 * @param maxProcessingDays The maximum number of days for processing the listing.
 * @param shippingMethod Name of the selected shipping method.
 * @param shippingUpgrade The name of the shipping upgrade selected for this listing. Default value is null.
 * @param expectedShipDate The date & time of the expected ship date, in epoch seconds.
 * @param buyerCoupon The amount of the buyer coupon that was discounted in the shop's currency.
 * @param shopCoupon The amount of the shop coupon that was discounted in the shop's currency.
 */
@Serializable

data class ShopReceiptTransaction (

    /* The unique numeric ID for a transaction. */
    @SerialName(value = "transaction_id") val transactionId: kotlin.Long? = null,

    /* The title string of the [listing](/documentation/reference#tag/ShopListing) purchased in this transaction. */
    @SerialName(value = "title") val title: kotlin.String? = null,

    /* The description string of the [listing](/documentation/reference#tag/ShopListing) purchased in this transaction. */
    @SerialName(value = "description") val description: kotlin.String? = null,

    /* The numeric user ID for the seller in this transaction. */
    @SerialName(value = "seller_user_id") val sellerUserId: kotlin.Long? = null,

    /* The numeric user ID for the buyer in this transaction. */
    @SerialName(value = "buyer_user_id") val buyerUserId: kotlin.Long? = null,

    /* The transaction's creation date and time, in epoch seconds. */
    @SerialName(value = "create_timestamp") val createTimestamp: kotlin.Int? = null,

    /* The transaction's creation date and time, in epoch seconds. */
    @SerialName(value = "created_timestamp") val createdTimestamp: kotlin.Int? = null,

    /* The transaction's paid date and time, in epoch seconds. */
    @SerialName(value = "paid_timestamp") val paidTimestamp: kotlin.Int? = null,

    /* The transaction's shipping date and time, in epoch seconds. */
    @SerialName(value = "shipped_timestamp") val shippedTimestamp: kotlin.Int? = null,

    /* The numeric quantity of products purchased in this transaction. */
    @SerialName(value = "quantity") val quantity: kotlin.Int? = null,

    /* The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction. */
    @SerialName(value = "listing_image_id") val listingImageId: kotlin.Long? = null,

    /* The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction. */
    @SerialName(value = "receipt_id") val receiptId: kotlin.Long? = null,

    /* When true, the transaction recorded the purchase of a digital listing. */
    @SerialName(value = "is_digital") val isDigital: kotlin.Boolean? = null,

    /* A string describing the files purchased in this transaction. */
    @SerialName(value = "file_data") val fileData: kotlin.String? = null,

    /* The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction. */
    @SerialName(value = "listing_id") val listingId: kotlin.Int? = null,

    /* The type string for the transaction, usually \"listing\". */
    @SerialName(value = "transaction_type") val transactionType: kotlin.String? = null,

    /* The numeric ID for a specific [product](/documentation/reference#tag/ShopListing-Product) purchased from a listing. */
    @SerialName(value = "product_id") val productId: kotlin.Long? = null,

    /* The SKU string for the product */
    @SerialName(value = "sku") val sku: kotlin.String? = null,

    /* A money object representing the price recorded the transaction. */
    @SerialName(value = "price") val price: Money? = null,

    /* A money object representing the shipping cost for this transaction. */
    @SerialName(value = "shipping_cost") val shippingCost: Money? = null,

    /* Array of variations and personalizations the buyer chose. */
    @SerialName(value = "variations") val variations: kotlin.collections.List<TransactionVariations>? = null,

    /* A list of property value entries for this product. Note: parenthesis characters (`(` and `)`) are not allowed. */
    @SerialName(value = "product_data") val productData: kotlin.collections.List<ListingPropertyValue>? = null,

    /* The ID of the shipping profile selected for this listing. */
    @SerialName(value = "shipping_profile_id") val shippingProfileId: kotlin.Long? = null,

    /* The minimum number of days for processing the listing. */
    @SerialName(value = "min_processing_days") val minProcessingDays: kotlin.Long? = null,

    /* The maximum number of days for processing the listing. */
    @SerialName(value = "max_processing_days") val maxProcessingDays: kotlin.Long? = null,

    /* Name of the selected shipping method. */
    @SerialName(value = "shipping_method") val shippingMethod: kotlin.String? = null,

    /* The name of the shipping upgrade selected for this listing. Default value is null. */
    @SerialName(value = "shipping_upgrade") val shippingUpgrade: kotlin.String? = null,

    /* The date & time of the expected ship date, in epoch seconds. */
    @SerialName(value = "expected_ship_date") val expectedShipDate: kotlin.Int? = null,

    /* The amount of the buyer coupon that was discounted in the shop's currency. */
    @SerialName(value = "buyer_coupon") val buyerCoupon: kotlin.Float? = 0f,

    /* The amount of the shop coupon that was discounted in the shop's currency. */
    @SerialName(value = "shop_coupon") val shopCoupon: kotlin.Float? = 0f

) {


}

