/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.etsy.apis.SellerTaxonomyApi
import com.etsy.models.ErrorSchema
import com.etsy.models.SellerTaxonomyNodes
import com.etsy.models.TaxonomyNodeProperties

class SellerTaxonomyApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SellerTaxonomyApi
        //val apiInstance = SellerTaxonomyApi()

        // to test getPropertiesByTaxonomyId
        should("test getPropertiesByTaxonomyId") {
            // uncomment below to test getPropertiesByTaxonomyId
            //val taxonomyId : kotlin.Long = 789 // kotlin.Long | The unique numeric ID of an Etsy taxonomy node, which is a metadata category for listings organized into the seller taxonomy hierarchy tree. For example, the \"shoes\" taxonomy node (ID: 1429, level: 1) is higher in the hierarchy than \"girls' shoes\" (ID: 1440, level: 2). The taxonomy nodes assigned to a listing support access to specific standardized product scales and properties. For example, listings assigned the taxonomy nodes \"shoes\" or \"girls' shoes\" support access to the \"EU\" shoe size scale with its associated property names and IDs for EU shoe sizes, such as property `value_id`:\"1394\", and `name`:\"38\".
            //val result : TaxonomyNodeProperties = apiInstance.getPropertiesByTaxonomyId(taxonomyId)
            //result shouldBe ("TODO")
        }

        // to test getSellerTaxonomyNodes
        should("test getSellerTaxonomyNodes") {
            // uncomment below to test getSellerTaxonomyNodes
            //val result : SellerTaxonomyNodes = apiInstance.getSellerTaxonomyNodes()
            //result shouldBe ("TODO")
        }

    }
}
