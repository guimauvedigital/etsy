/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.etsy.apis

import com.etsy.models.ErrorSchema
import com.etsy.models.ShopListingFile
import com.etsy.models.ShopListingFiles

import com.etsy.infrastructure.*
import io.ktor.client.HttpClient
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

open class ShopListingFileApi : ApiClient {

    constructor(
        baseUrl: String = ApiClient.BASE_URL,
        httpClientEngine: HttpClientEngine? = null,
        httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
        jsonSerializer: Json = ApiClient.JSON_DEFAULT
    ) : super(baseUrl = baseUrl, httpClientEngine = httpClientEngine, httpClientConfig = httpClientConfig, jsonBlock = jsonSerializer)

    constructor(
        baseUrl: String,
        httpClient: HttpClient
    ): super(baseUrl = baseUrl, httpClient = httpClient)

    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Deletes a file from a specific listing. When you delete the final file for a digital listing, the listing converts into a physical listing. The response to a delete request returns a list of the remaining file records associated with the given listing.
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @param listingId The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
     * @param listingFileId The unique numeric ID of a file associated with a digital listing.
     * @return void
     */
    open suspend fun deleteListingFile(shopId: kotlin.Long, listingId: kotlin.Long, listingFileId: kotlin.Long): HttpResponse<Unit> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.DELETE,
            "/v3/application/shops/{shop_id}/listings/{listing_id}/files/{listing_file_id}".replace("{" + "shop_id" + "}", "$shopId").replace("{" + "listing_id" + "}", "$listingId").replace("{" + "listing_file_id" + "}", "$listingFileId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Retrieves all the files associated with the given digital listing. Requesting files from a physical listing returns an empty result.
     * @param listingId The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @return ShopListingFiles
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getAllListingFiles(listingId: kotlin.Long, shopId: kotlin.Long): HttpResponse<ShopListingFiles> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/v3/application/shops/{shop_id}/listings/{listing_id}/files".replace("{" + "listing_id" + "}", "$listingId").replace("{" + "shop_id" + "}", "$shopId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Retrieves a single file associated with the given digital listing. Requesting a file from a physical listing returns an empty result.
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @param listingId The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
     * @param listingFileId The unique numeric ID of a file associated with a digital listing.
     * @return ShopListingFile
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getListingFile(shopId: kotlin.Long, listingId: kotlin.Long, listingFileId: kotlin.Long): HttpResponse<ShopListingFile> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/v3/application/shops/{shop_id}/listings/{listing_id}/files/{listing_file_id}".replace("{" + "shop_id" + "}", "$shopId").replace("{" + "listing_id" + "}", "$listingId").replace("{" + "listing_file_id" + "}", "$listingFileId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * 
     * &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notificationPrimary wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/discussions\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Uploads a new file for a digital listing, or associates an existing file with a specific listing. You must either provide the &#x60;listing_file_id&#x60; of an existing file, or the name and binary file data for a file to upload. Associating an existing file to a physical listing converts the physical listing into a digital listing, which removes all shipping costs and any product and inventory variations.
     * @param shopId The unique positive non-zero numeric ID for an Etsy Shop.
     * @param listingId The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
     * @param listingFileId The unique numeric ID of a file associated with a digital listing. (optional)
     * @param file A binary file to upload. (optional)
     * @param name The file name string of a file to upload (optional)
     * @param rank The positive non-zero numeric position in the images displayed in a listing, with rank 1 images appearing in the left-most position in a listing. (optional, default to 1L)
     * @return ShopListingFile
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun uploadListingFile(shopId: kotlin.Long, listingId: kotlin.Long, listingFileId: kotlin.Long? = null, file: io.ktor.client.request.forms.FormPart<io.ktor.client.request.forms.InputProvider>? = null, name: kotlin.String? = null, rank: kotlin.Long? = 1L): HttpResponse<ShopListingFile> {

        val localVariableAuthNames = listOf<String>("api_key", "oauth2")

        val localVariableBody = 
            formData {
                listingFileId?.apply { append("listing_file_id", listingFileId) }
                file?.apply { append(file) }
                name?.apply { append("name", name) }
                rank?.apply { append("rank", rank) }
            }

        val localVariableQuery = mutableMapOf<String, List<String>>()
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/v3/application/shops/{shop_id}/listings/{listing_id}/files".replace("{" + "shop_id" + "}", "$shopId").replace("{" + "listing_id" + "}", "$listingId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return multipartFormRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


}
